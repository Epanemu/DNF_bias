Command:
python test_script.py -s constant_subclass -d 6 -n 500 --seed 73 -m brcg -k 6 --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.018750000000000003
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.012
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 500 remain. 
Dimension is 6.

Computed total variation: 0.268
BRCG
Learning DNF rule with complexity parameters lambda0=0.0001, lambda1=0
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:34:15 PM: Your problem has 263 variables, 250 constraints, and 0 parameters.
(CVXPY) Sep 20 07:34:15 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:34:15 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:34:15 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:34:15 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:34:15 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:34:15 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Finished problem compilation (took 7.516e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 263
  constraints   = 513
  nnz(P)        = 0
  nnz(A)        = 2263
  cones (total) = 1
    : Nonnegative = 1,  numel = 513

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.9963e-01  +2.5067e+02  2.50e+02  9.35e-01  2.14e+01  1.00e+00  1.01e+00   ------   
  1  +5.9248e-01  +5.1834e+01  5.12e+01  3.64e-01  1.27e+01  3.91e-03  5.29e-01  6.27e-01  
  2  +5.3900e-01  +6.9893e+00  6.45e+00  1.19e-01  5.13e+00  1.18e-02  2.34e-01  8.55e-01  
  3  +5.0176e-01  +1.3089e+00  8.07e-01  2.42e-02  1.02e+00  1.75e-05  1.98e-01  5.90e-01  
  4  +5.0038e-01  +6.1724e-01  1.17e-01  3.57e-03  1.55e-01  2.88e-06  3.94e-02  8.19e-01  
  5  +4.9986e-01  +6.1463e-01  1.15e-01  2.97e-03  1.30e-01  7.10e-06  1.46e-02  7.54e-01  
  6  +4.9346e-01  +5.7261e-01  7.91e-02  4.29e-04  1.90e-02  3.97e-05  1.43e-03  9.16e-01  
  7  +4.8483e-01  +5.2326e-01  3.84e-02  1.99e-04  8.82e-03  1.78e-05  7.42e-04  6.55e-01  
  8  +4.7797e-01  +4.9008e-01  1.21e-02  5.41e-05  2.40e-03  8.60e-06  2.29e-04  9.90e-01  
  9  +4.7439e-01  +4.7529e-01  8.97e-04  3.76e-06  1.67e-04  5.54e-07  1.70e-05  9.32e-01  
 10  +4.7410e-01  +4.7411e-01  9.43e-06  3.94e-08  1.75e-06  5.88e-09  1.80e-07  9.90e-01  
 11  +4.7410e-01  +4.7410e-01  9.43e-08  3.94e-10  1.75e-08  5.88e-11  1.80e-09  9.90e-01  
 12  +4.7410e-01  +4.7410e-01  9.43e-10  3.94e-12  1.75e-10  5.89e-13  1.80e-11  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 2.3711ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Problem status: optimal
(CVXPY) Sep 20 07:34:15 PM: Optimal value: 4.741e-01
(CVXPY) Sep 20 07:34:15 PM: Compilation took 7.516e-03 seconds
(CVXPY) Sep 20 07:34:15 PM: Solver (including time spent in interface) took 3.517e-03 seconds
Initial LP solved
Iteration: 1, Objective: 0.4741
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:34:15 PM: Your problem has 273 variables, 250 constraints, and 0 parameters.
(CVXPY) Sep 20 07:34:15 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:34:15 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:34:15 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:34:15 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:34:15 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:34:15 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Finished problem compilation (took 5.001e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 273
  constraints   = 523
  nnz(P)        = 0
  nnz(A)        = 2648
  cones (total) = 1
    : Nonnegative = 1,  numel = 523

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.9917e-01  +2.5127e+02  2.51e+02  9.36e-01  2.19e+01  1.00e+00  1.01e+00   ------   
  1  +5.8949e-01  +5.2060e+01  5.15e+01  3.68e-01  1.29e+01  3.91e-03  5.34e-01  6.25e-01  
  2  +5.3636e-01  +6.7250e+00  6.19e+00  1.14e-01  4.99e+00  1.23e-02  2.27e-01  8.84e-01  
  3  +5.0171e-01  +1.3862e+00  8.85e-01  2.70e-02  1.16e+00  4.68e-04  1.83e-01  6.53e-01  
  4  +4.9990e-01  +7.8482e-01  2.85e-01  8.66e-03  3.82e-01  2.06e-04  5.84e-02  7.06e-01  
  5  +4.9220e-01  +7.2521e-01  2.33e-01  2.94e-03  1.33e-01  7.34e-04  9.55e-03  8.77e-01  
  6  +4.8715e-01  +6.9328e-01  2.06e-01  1.86e-03  8.46e-02  8.11e-04  5.94e-03  4.31e-01  
  7  +4.7712e-01  +6.2622e-01  1.49e-01  9.11e-04  4.14e-02  5.82e-04  2.91e-03  6.96e-01  
  8  +4.6824e-01  +5.6959e-01  1.01e-01  5.24e-04  2.38e-02  1.09e-04  1.68e-03  8.82e-01  
  9  +4.6753e-01  +5.6699e-01  9.95e-02  4.83e-04  2.20e-02  1.10e-04  1.54e-03  1.71e-01  
 10  +4.6281e-01  +5.4578e-01  8.30e-02  3.51e-04  1.60e-02  9.27e-05  1.12e-03  5.11e-01  
 11  +4.5560e-01  +5.1220e-01  5.66e-02  2.26e-04  1.03e-02  5.89e-05  7.35e-04  8.17e-01  
 12  +4.4296e-01  +4.6214e-01  1.92e-02  7.13e-05  3.24e-03  1.89e-05  2.39e-04  9.90e-01  
 13  +4.3670e-01  +4.3798e-01  1.28e-03  4.57e-06  2.07e-04  1.20e-06  1.57e-05  9.39e-01  
 14  +4.3647e-01  +4.3709e-01  6.17e-04  2.08e-06  9.38e-05  7.52e-07  7.12e-06  7.85e-01  
 15  +4.3632e-01  +4.3659e-01  2.70e-04  8.84e-07  3.99e-05  3.33e-07  3.06e-06  5.84e-01  
 16  +4.3621e-01  +4.3622e-01  1.50e-05  4.86e-08  2.20e-06  2.10e-08  1.69e-07  9.90e-01  
 17  +4.3620e-01  +4.3620e-01  1.52e-07  4.92e-10  2.22e-08  2.12e-10  1.71e-09  9.90e-01  
 18  +4.3620e-01  +4.3620e-01  1.52e-09  4.92e-12  2.22e-10  2.12e-12  1.71e-11  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 3.8658ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Problem status: optimal
(CVXPY) Sep 20 07:34:15 PM: Optimal value: 4.362e-01
(CVXPY) Sep 20 07:34:15 PM: Compilation took 5.001e-03 seconds
(CVXPY) Sep 20 07:34:15 PM: Solver (including time spent in interface) took 4.519e-03 seconds
Iteration: 2, Objective: 0.4362
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:34:15 PM: Your problem has 283 variables, 250 constraints, and 0 parameters.
(CVXPY) Sep 20 07:34:15 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:34:15 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:34:15 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:34:15 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:34:15 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:34:15 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Finished problem compilation (took 4.996e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 283
  constraints   = 533
  nnz(P)        = 0
  nnz(A)        = 2926
  cones (total) = 1
    : Nonnegative = 1,  numel = 533

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.9889e-01  +2.5135e+02  2.51e+02  9.36e-01  2.20e+01  1.00e+00  1.01e+00   ------   
  1  +5.8629e-01  +5.2202e+01  5.16e+01  3.72e-01  1.29e+01  3.90e-03  5.37e-01  6.23e-01  
  2  +5.3393e-01  +6.4740e+00  5.94e+00  1.09e-01  4.78e+00  1.27e-02  2.18e-01  9.11e-01  
  3  +5.0124e-01  +1.3987e+00  8.97e-01  2.77e-02  1.20e+00  8.06e-04  1.64e-01  7.56e-01  
  4  +4.9768e-01  +9.4264e-01  4.45e-01  1.19e-02  5.28e-01  7.56e-04  5.04e-02  7.45e-01  
  5  +4.8170e-01  +8.7359e-01  3.92e-01  3.68e-03  1.68e-01  2.16e-03  1.17e-02  8.26e-01  
  6  +4.6998e-01  +7.8775e-01  3.18e-01  2.13e-03  9.74e-02  1.82e-03  6.91e-03  5.35e-01  
  7  +4.5328e-01  +6.6984e-01  2.17e-01  1.17e-03  5.34e-02  9.24e-04  3.97e-03  6.03e-01  
  8  +4.2992e-01  +5.2171e-01  9.18e-02  4.51e-04  2.04e-02  2.53e-04  1.68e-03  6.61e-01  
  9  +4.2003e-01  +4.6759e-01  4.76e-02  2.02e-04  9.12e-03  9.54e-05  7.56e-04  8.64e-01  
 10  +4.1856e-01  +4.6178e-01  4.32e-02  1.85e-04  8.36e-03  7.12e-05  7.06e-04  3.01e-01  
 11  +4.1466e-01  +4.4746e-01  3.28e-02  1.32e-04  5.95e-03  5.14e-05  5.07e-04  4.43e-01  
 12  +4.0638e-01  +4.1194e-01  5.56e-03  2.21e-05  9.95e-04  5.57e-06  8.97e-05  9.90e-01  
 13  +4.0446e-01  +4.0464e-01  1.79e-04  7.06e-07  3.18e-05  1.73e-07  2.91e-06  9.69e-01  
 14  +4.0440e-01  +4.0440e-01  1.79e-06  7.06e-09  3.18e-07  1.73e-09  2.92e-08  9.90e-01  
 15  +4.0440e-01  +4.0440e-01  1.79e-08  7.06e-11  3.18e-09  1.73e-11  2.92e-10  9.90e-01  
 16  +4.0440e-01  +4.0440e-01  1.79e-10  7.06e-13  3.18e-11  1.73e-13  2.92e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 3.37ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Problem status: optimal
(CVXPY) Sep 20 07:34:15 PM: Optimal value: 4.044e-01
(CVXPY) Sep 20 07:34:15 PM: Compilation took 4.996e-03 seconds
(CVXPY) Sep 20 07:34:15 PM: Solver (including time spent in interface) took 3.513e-03 seconds
Iteration: 3, Objective: 0.4044
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:34:15 PM: Your problem has 293 variables, 250 constraints, and 0 parameters.
(CVXPY) Sep 20 07:34:15 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:34:15 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:34:15 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:34:15 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:34:15 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:34:15 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Finished problem compilation (took 3.998e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 293
  constraints   = 543
  nnz(P)        = 0
  nnz(A)        = 3129
  cones (total) = 1
    : Nonnegative = 1,  numel = 543

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.9861e-01  +2.5147e+02  2.51e+02  9.37e-01  2.20e+01  1.00e+00  1.02e+00   ------   
  1  +5.8240e-01  +5.2458e+01  5.19e+01  3.77e-01  1.29e+01  3.90e-03  5.41e-01  6.20e-01  
  2  +5.3172e-01  +6.2556e+00  5.72e+00  1.05e-01  4.60e+00  1.31e-02  2.12e-01  9.36e-01  
  3  +5.0101e-01  +1.4492e+00  9.48e-01  2.93e-02  1.27e+00  1.22e-03  1.48e-01  8.21e-01  
  4  +4.9140e-01  +1.0035e+00  5.12e-01  8.68e-03  3.94e-01  2.03e-03  2.77e-02  9.24e-01  
  5  +4.8065e-01  +9.5995e-01  4.79e-01  4.58e-03  2.09e-01  2.82e-03  1.42e-02  5.78e-01  
  6  +4.7071e-01  +8.7823e-01  4.08e-01  2.99e-03  1.37e-01  1.23e-03  9.35e-03  7.60e-01  
  7  +4.5292e-01  +7.5465e-01  3.02e-01  1.76e-03  8.01e-02  9.19e-04  5.80e-03  4.40e-01  
  8  +4.3292e-01  +6.2480e-01  1.92e-01  1.00e-03  4.55e-02  4.33e-04  3.57e-03  5.22e-01  
  9  +4.0091e-01  +4.3931e-01  3.84e-02  1.83e-04  8.23e-03  4.06e-06  7.63e-04  9.46e-01  
 10  +4.0043e-01  +4.3864e-01  3.82e-02  1.70e-04  7.64e-03  6.31e-06  6.90e-04  1.59e-01  
 11  +3.9626e-01  +4.2024e-01  2.40e-02  1.10e-04  4.94e-03  2.15e-05  4.67e-04  9.90e-01  
 12  +3.9190e-01  +4.0272e-01  1.08e-02  4.70e-05  2.11e-03  9.98e-06  2.03e-04  6.23e-01  
 13  +3.8881e-01  +3.8916e-01  3.56e-04  1.54e-06  6.93e-05  3.21e-07  6.87e-06  9.68e-01  
 14  +3.8870e-01  +3.8870e-01  3.57e-06  1.55e-08  6.95e-07  3.22e-09  6.89e-08  9.90e-01  
 15  +3.8870e-01  +3.8870e-01  3.57e-08  1.55e-10  6.95e-09  3.22e-11  6.89e-10  9.90e-01  
 16  +3.8870e-01  +3.8870e-01  3.57e-10  1.55e-12  6.95e-11  3.22e-13  6.89e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 3.9406ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Problem status: optimal
(CVXPY) Sep 20 07:34:15 PM: Optimal value: 3.887e-01
(CVXPY) Sep 20 07:34:15 PM: Compilation took 3.998e-03 seconds
(CVXPY) Sep 20 07:34:15 PM: Solver (including time spent in interface) took 5.530e-03 seconds
Iteration: 4, Objective: 0.3887
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:34:15 PM: Your problem has 301 variables, 250 constraints, and 0 parameters.
(CVXPY) Sep 20 07:34:15 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:34:15 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:34:15 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:34:15 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:34:15 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:34:15 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Finished problem compilation (took 5.004e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 301
  constraints   = 551
  nnz(P)        = 0
  nnz(A)        = 3258
  cones (total) = 1
    : Nonnegative = 1,  numel = 551

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.9846e-01  +2.5144e+02  2.51e+02  9.38e-01  2.20e+01  1.00e+00  1.02e+00   ------   
  1  +5.7943e-01  +5.2623e+01  5.20e+01  3.80e-01  1.29e+01  3.90e-03  5.43e-01  6.18e-01  
  2  +5.2927e-01  +5.9966e+00  5.47e+00  1.00e-01  4.39e+00  1.35e-02  2.04e-01  9.62e-01  
  3  +5.0045e-01  +1.4890e+00  9.89e-01  3.00e-02  1.31e+00  1.90e-03  1.27e-01  9.02e-01  
  4  +4.8300e-01  +1.1602e+00  6.77e-01  7.76e-03  3.54e-01  4.53e-03  2.32e-02  8.84e-01  
  5  +4.7157e-01  +1.0900e+00  6.18e-01  4.61e-03  2.11e-01  4.85e-03  1.38e-02  5.31e-01  
  6  +4.5474e-01  +9.2282e-01  4.68e-01  2.66e-03  1.21e-01  3.31e-03  8.29e-03  5.43e-01  
  7  +4.2537e-01  +6.2765e-01  2.02e-01  1.09e-03  4.90e-02  3.11e-05  3.84e-03  8.22e-01  
  8  +4.1648e-01  +5.7693e-01  1.60e-01  8.26e-04  3.71e-02  3.72e-05  3.05e-03  2.94e-01  
  9  +3.9780e-01  +4.6811e-01  7.03e-02  3.47e-04  1.55e-02  2.92e-05  1.41e-03  6.84e-01  
 10  +3.9345e-01  +4.4576e-01  5.23e-02  2.53e-04  1.13e-02  2.35e-05  1.05e-03  3.11e-01  
 11  +3.8396e-01  +3.9583e-01  1.19e-02  5.64e-05  2.51e-03  7.55e-06  2.51e-04  8.89e-01  
 12  +3.8115e-01  +3.8235e-01  1.19e-03  5.64e-06  2.51e-04  7.45e-07  2.59e-05  9.00e-01  
 13  +3.8106e-01  +3.8192e-01  8.61e-04  3.95e-06  1.76e-04  5.91e-07  1.84e-05  5.45e-01  
 14  +3.8084e-01  +3.8096e-01  1.22e-04  5.54e-07  2.47e-05  9.15e-08  2.65e-06  9.90e-01  
 15  +3.8080e-01  +3.8080e-01  1.44e-06  6.52e-09  2.91e-07  1.07e-09  3.13e-08  9.88e-01  
 16  +3.8080e-01  +3.8080e-01  1.44e-08  6.54e-11  2.92e-09  1.08e-11  3.13e-10  9.90e-01  
 17  +3.8080e-01  +3.8080e-01  1.44e-10  6.54e-13  2.92e-11  1.08e-13  3.15e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 4.5554ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Problem status: optimal
(CVXPY) Sep 20 07:34:15 PM: Optimal value: 3.808e-01
(CVXPY) Sep 20 07:34:15 PM: Compilation took 5.004e-03 seconds
(CVXPY) Sep 20 07:34:15 PM: Solver (including time spent in interface) took 5.510e-03 seconds
Iteration: 5, Objective: 0.3808
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:34:15 PM: Your problem has 311 variables, 250 constraints, and 0 parameters.
(CVXPY) Sep 20 07:34:15 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:34:15 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:34:15 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:34:15 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:34:15 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:34:15 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:34:15 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:34:15 PM: Finished problem compilation (took 5.526e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 311
  constraints   = 561
  nnz(P)        = 0
  nnz(A)        = 3439
  cones (total) = 1
    : Nonnegative = 1,  numel = 561

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.9806e-01  +2.5174e+02  2.51e+02  9.38e-01  2.20e+01  1.00e+00  1.02e+00   ------   
  1  +5.7456e-01  +5.3018e+01  5.24e+01  3.86e-01  1.29e+01  3.89e-03  5.50e-01  6.14e-01  
  2  +5.2579e-01  +5.8016e+00  5.28e+00  9.60e-02  4.21e+00  1.42e-02  1.98e-01  9.90e-01  
  3  +5.0162e-01  +1.6393e+00  1.14e+00  3.04e-02  1.36e+00  2.97e-03  9.13e-02  8.55e-01  
  4  +4.8876e-01  +1.5493e+00  1.06e+00  1.25e-02  5.77e-01  5.40e-03  3.46e-02  6.86e-01  
  5  +4.6877e-01  +1.1319e+00  6.63e-01  5.74e-03  2.62e-01  3.32e-03  1.71e-02  6.08e-01  
  6  +4.4906e-01  +9.6891e-01  5.20e-01  3.22e-03  1.47e-01  2.42e-03  1.00e-02  5.89e-01  
  7  +4.2245e-01  +6.8902e-01  2.67e-01  1.69e-03  7.58e-02  1.99e-04  6.16e-03  7.05e-01  
  8  +4.0407e-01  +5.5999e-01  1.56e-01  9.07e-04  4.05e-02  1.09e-04  3.63e-03  4.89e-01  
  9  +3.8778e-01  +4.5967e-01  7.19e-02  3.99e-04  1.77e-02  4.28e-05  1.79e-03  7.25e-01  
 10  +3.7765e-01  +4.0003e-01  2.24e-02  1.19e-04  5.27e-03  1.35e-05  5.81e-04  7.62e-01  
 11  +3.7338e-01  +3.7508e-01  1.70e-03  8.96e-06  3.97e-04  9.79e-07  4.62e-05  9.40e-01  
 12  +3.7306e-01  +3.7332e-01  2.58e-04  1.35e-06  5.99e-05  1.48e-07  7.06e-06  8.53e-01  
 13  +3.7300e-01  +3.7300e-01  3.74e-06  1.96e-08  8.70e-07  2.16e-09  1.03e-07  9.87e-01  
 14  +3.7300e-01  +3.7300e-01  3.74e-08  1.96e-10  8.70e-09  2.16e-11  1.03e-09  9.90e-01  
 15  +3.7300e-01  +3.7300e-01  3.75e-10  1.96e-12  8.70e-11  2.17e-13  1.03e-11  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 4.5313ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:15 PM: Problem status: optimal
(CVXPY) Sep 20 07:34:15 PM: Optimal value: 3.730e-01
(CVXPY) Sep 20 07:34:15 PM: Compilation took 5.526e-03 seconds
(CVXPY) Sep 20 07:34:15 PM: Solver (including time spent in interface) took 5.003e-03 seconds
Iteration: 6, Objective: 0.3730
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:34:16 PM: Your problem has 319 variables, 250 constraints, and 0 parameters.
(CVXPY) Sep 20 07:34:16 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:34:16 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:34:16 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:34:16 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:16 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:34:16 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:34:16 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:34:16 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:34:16 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:34:16 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:34:16 PM: Finished problem compilation (took 4.510e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:16 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 319
  constraints   = 569
  nnz(P)        = 0
  nnz(A)        = 3555
  cones (total) = 1
    : Nonnegative = 1,  numel = 569

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.9801e-01  +2.5164e+02  2.51e+02  9.39e-01  2.19e+01  1.00e+00  1.02e+00   ------   
  1  +5.7337e-01  +5.3164e+01  5.26e+01  3.90e-01  1.28e+01  3.88e-03  5.52e-01  6.11e-01  
  2  +5.2483e-01  +5.8547e+00  5.33e+00  9.71e-02  4.21e+00  1.44e-02  2.01e-01  9.90e-01  
  3  +5.0192e-01  +1.5284e+00  1.03e+00  2.62e-02  1.18e+00  2.80e-03  7.59e-02  8.60e-01  
  4  +4.8964e-01  +1.4352e+00  9.46e-01  1.10e-02  5.04e-01  5.05e-03  3.00e-02  6.45e-01  
  5  +4.7024e-01  +1.1034e+00  6.33e-01  5.54e-03  2.52e-01  2.77e-03  1.67e-02  6.09e-01  
  6  +4.5779e-01  +1.0231e+00  5.65e-01  3.86e-03  1.75e-01  2.29e-03  1.19e-02  4.64e-01  
  7  +4.2487e-01  +6.9513e-01  2.70e-01  1.70e-03  7.59e-02  3.11e-04  6.05e-03  6.86e-01  
  8  +4.0558e-01  +5.6602e-01  1.60e-01  9.33e-04  4.14e-02  1.64e-04  3.68e-03  4.78e-01  
  9  +3.9001e-01  +4.7339e-01  8.34e-02  4.77e-04  2.11e-02  5.41e-05  2.11e-03  7.39e-01  
 10  +3.8483e-01  +4.4484e-01  6.00e-02  3.20e-04  1.42e-02  4.20e-05  1.44e-03  4.36e-01  
 11  +3.7955e-01  +4.1589e-01  3.63e-02  1.90e-04  8.41e-03  2.39e-05  8.92e-04  7.48e-01  
 12  +3.7280e-01  +3.7979e-01  6.99e-03  3.52e-05  1.55e-03  4.53e-06  1.77e-04  8.18e-01  
 13  +3.7132e-01  +3.7217e-01  8.55e-04  4.27e-06  1.89e-04  5.42e-07  2.21e-05  9.02e-01  
 14  +3.7111e-01  +3.7113e-01  2.24e-05  1.11e-07  4.92e-06  1.40e-08  5.84e-07  9.82e-01  
 15  +3.7110e-01  +3.7110e-01  2.24e-07  1.11e-09  4.92e-08  1.40e-10  5.84e-09  9.90e-01  
 16  +3.7110e-01  +3.7110e-01  2.24e-09  1.11e-11  4.92e-10  1.40e-12  5.84e-11  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 5.3026ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:16 PM: Problem status: optimal
(CVXPY) Sep 20 07:34:16 PM: Optimal value: 3.711e-01
(CVXPY) Sep 20 07:34:16 PM: Compilation took 4.510e-03 seconds
(CVXPY) Sep 20 07:34:16 PM: Solver (including time spent in interface) took 7.010e-03 seconds
Iteration: 7, Objective: 0.3711
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:34:16 PM: Your problem has 322 variables, 250 constraints, and 0 parameters.
(CVXPY) Sep 20 07:34:16 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:34:16 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:34:16 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:34:16 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:16 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:34:16 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:34:16 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:34:16 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:34:16 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:34:16 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:34:16 PM: Finished problem compilation (took 5.506e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:16 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 322
  constraints   = 572
  nnz(P)        = 0
  nnz(A)        = 3624
  cones (total) = 1
    : Nonnegative = 1,  numel = 572

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.9804e-01  +2.5154e+02  2.51e+02  9.39e-01  2.19e+01  1.00e+00  1.02e+00   ------   
  1  +5.7319e-01  +5.3115e+01  5.25e+01  3.90e-01  1.28e+01  3.88e-03  5.51e-01  6.12e-01  
  2  +5.2468e-01  +5.8787e+00  5.35e+00  9.66e-02  4.17e+00  1.44e-02  1.99e-01  9.90e-01  
  3  +5.0242e-01  +1.5969e+00  1.09e+00  2.70e-02  1.22e+00  3.07e-03  7.65e-02  8.25e-01  
  4  +4.9020e-01  +1.5450e+00  1.05e+00  1.14e-02  5.28e-01  5.77e-03  3.09e-02  6.43e-01  
  5  +4.7121e-01  +1.3297e+00  8.59e-01  6.54e-03  3.00e-01  4.73e-03  1.87e-02  5.29e-01  
  6  +4.4665e-01  +1.0198e+00  5.73e-01  3.76e-03  1.71e-01  2.50e-03  1.17e-02  4.75e-01  
  7  +4.1275e-01  +6.4614e-01  2.33e-01  1.55e-03  6.89e-02  2.01e-05  5.93e-03  8.48e-01  
  8  +3.9947e-01  +5.4157e-01  1.42e-01  8.91e-04  3.94e-02  2.27e-05  3.66e-03  4.64e-01  
  9  +3.9115e-01  +4.8742e-01  9.63e-02  5.48e-04  2.42e-02  2.82e-05  2.34e-03  5.22e-01  
 10  +3.8508e-01  +4.4772e-01  6.26e-02  3.36e-04  1.49e-02  3.14e-05  1.49e-03  6.73e-01  
 11  +3.8059e-01  +4.2237e-01  4.18e-02  2.17e-04  9.61e-03  2.35e-05  1.00e-03  5.49e-01  
 12  +3.7275e-01  +3.7924e-01  6.49e-03  3.29e-05  1.45e-03  3.73e-06  1.65e-04  9.29e-01  
 13  +3.7129e-01  +3.7201e-01  7.11e-04  3.56e-06  1.57e-04  4.25e-07  1.85e-05  9.46e-01  
 14  +3.7110e-01  +3.7112e-01  1.19e-05  5.95e-08  2.63e-06  7.05e-09  3.13e-07  9.85e-01  
 15  +3.7110e-01  +3.7110e-01  1.19e-07  5.95e-10  2.63e-08  7.05e-11  3.13e-09  9.90e-01  
 16  +3.7110e-01  +3.7110e-01  1.19e-09  5.95e-12  2.63e-10  7.05e-13  3.13e-11  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 5.0833ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:16 PM: Problem status: optimal
(CVXPY) Sep 20 07:34:16 PM: Optimal value: 3.711e-01
(CVXPY) Sep 20 07:34:16 PM: Compilation took 5.506e-03 seconds
(CVXPY) Sep 20 07:34:16 PM: Solver (including time spent in interface) took 6.010e-03 seconds
Iteration: 8, Objective: 0.3711
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:34:16 PM: Your problem has 323 variables, 250 constraints, and 0 parameters.
(CVXPY) Sep 20 07:34:16 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:34:16 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:34:16 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:34:16 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:16 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:34:16 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:34:16 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:34:16 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:34:16 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:34:16 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:34:16 PM: Finished problem compilation (took 4.996e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:16 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 323
  constraints   = 573
  nnz(P)        = 0
  nnz(A)        = 3630
  cones (total) = 1
    : Nonnegative = 1,  numel = 573

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.9804e-01  +2.5152e+02  2.51e+02  9.39e-01  2.19e+01  1.00e+00  1.02e+00   ------   
  1  +5.7301e-01  +5.3142e+01  5.26e+01  3.91e-01  1.28e+01  3.88e-03  5.52e-01  6.11e-01  
  2  +5.2457e-01  +5.8886e+00  5.36e+00  9.68e-02  4.17e+00  1.44e-02  2.00e-01  9.90e-01  
  3  +5.0265e-01  +1.6344e+00  1.13e+00  2.76e-02  1.25e+00  3.21e-03  7.74e-02  8.09e-01  
  4  +4.9120e-01  +1.6147e+00  1.12e+00  1.24e-02  5.73e-01  5.77e-03  3.34e-02  6.36e-01  
  5  +4.7164e-01  +1.3527e+00  8.81e-01  6.79e-03  3.11e-01  4.60e-03  1.94e-02  5.49e-01  
  6  +4.4674e-01  +1.0398e+00  5.93e-01  3.82e-03  1.73e-01  2.59e-03  1.18e-02  4.88e-01  
  7  +4.1391e-01  +6.6080e-01  2.47e-01  1.65e-03  7.34e-02  2.03e-05  6.30e-03  8.53e-01  
  8  +3.9897e-01  +5.3976e-01  1.41e-01  8.87e-04  3.92e-02  2.01e-05  3.66e-03  4.82e-01  
  9  +3.9203e-01  +4.9458e-01  1.03e-01  5.86e-04  2.59e-02  3.20e-05  2.48e-03  5.39e-01  
 10  +3.8513e-01  +4.4829e-01  6.32e-02  3.40e-04  1.50e-02  3.37e-05  1.51e-03  7.23e-01  
 11  +3.8163e-01  +4.2821e-01  4.66e-02  2.45e-04  1.08e-02  2.69e-05  1.12e-03  4.77e-01  
 12  +3.7324e-01  +3.8182e-01  8.58e-03  4.37e-05  1.93e-03  4.83e-06  2.18e-04  9.19e-01  
 13  +3.7136e-01  +3.7234e-01  9.80e-04  4.91e-06  2.17e-04  5.80e-07  2.55e-05  9.45e-01  
 14  +3.7111e-01  +3.7114e-01  3.03e-05  1.51e-07  6.68e-06  1.84e-08  7.95e-07  9.90e-01  
 15  +3.7110e-01  +3.7110e-01  3.03e-07  1.52e-09  6.69e-08  1.85e-10  7.96e-09  9.90e-01  
 16  +3.7110e-01  +3.7110e-01  3.03e-09  1.52e-11  6.69e-10  1.85e-12  7.97e-11  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 4.9888ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:34:16 PM: Problem status: optimal
(CVXPY) Sep 20 07:34:16 PM: Optimal value: 3.711e-01
(CVXPY) Sep 20 07:34:16 PM: Compilation took 4.996e-03 seconds
(CVXPY) Sep 20 07:34:16 PM: Solver (including time spent in interface) took 6.515e-03 seconds
FULL MODEL:
  Accruacy: 0.606
  Our objective: 0.21200000000000002

IF 
    (x0 = 0 AND x1 = 0 AND x5 = 1)                                  <-- (term's our objective: 0.032)
 OR (x0 = 0 AND x1 = 1 AND x2 = 1 AND x3 = 0 AND x4 = 1 AND x5 = 0) <-- (term's our objective: 0.008)
 OR (x0 = 0 AND x1 = 1 AND x2 = 1 AND x3 = 1 AND x4 = 0 AND x5 = 1) <-- (term's our objective: 0.004)
 OR (x0 = 0 AND x2 = 0 AND x3 = 1 AND x4 = 0 AND x5 = 0)            <-- (term's our objective: 0.008)
 OR (x0 = 0 AND x3 = 0 AND x4 = 0 AND x5 = 0)                       <-- (term's our objective: 0.06)
 OR (x0 = 1 AND x1 = 0 AND x2 = 0 AND x3 = 0 AND x4 = 0 AND x5 = 1) <-- (term's our objective: 0.012)
 OR (x0 = 1 AND x1 = 0 AND x2 = 0 AND x3 = 1 AND x5 = 0)            <-- (term's our objective: 0.028)
 OR (x0 = 1 AND x1 = 0 AND x2 = 1 AND x3 = 0 AND x4 = 0 AND x5 = 0) <-- (term's our objective: 0.008)
 OR (x0 = 1 AND x1 = 1 AND x2 = 1 AND x3 = 0 AND x4 = 0 AND x5 = 1) <-- (term's our objective: 0.004)
 OR (x0 = 1 AND x2 = 1 AND x4 = 1 AND x5 = 0)                       <-- (term's our objective: 0.048)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 4.345958948135376
Best over terms:
  Our final objective: 0.05999999999999997
    Its accruacy: 0.53
    Its hamming distance: 2
  Shortest hamming distance: 2
    Its our objective: 0.05999999999999997
  Highest accruacy: 0.53
  static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step      
Errors:
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 1 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 2 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 3 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 4 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 5 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 6 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 7 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 8 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 9 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 10 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 11 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 12 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 13 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 14 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 15 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 16 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 17 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 18 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 19 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 20 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 21 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 22 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 23 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 24 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 25 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 26 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 27 times so far.

  warnings.warn(msg, UserWarning)
C:\personal\work\DNF_bias\src\aix360\aix360\algorithms\rbm\beam_search.py:58: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  zOut = pd.Series(index=X.columns)

