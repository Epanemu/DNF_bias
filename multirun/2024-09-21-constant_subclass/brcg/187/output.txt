Command:
python test_script.py -s constant_subclass -d 5 -n 5000 --seed 73 -m brcg -k 5 --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.037500000000000006
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.0376
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 5000 remain. 
Dimension is 5.

Computed total variation: 0.0796
BRCG
Learning DNF rule with complexity parameters lambda0=0.0001, lambda1=0
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:31:39 PM: Your problem has 2511 variables, 2500 constraints, and 0 parameters.
(CVXPY) Sep 20 07:31:39 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:31:39 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:31:39 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:31:39 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:31:39 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:31:39 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:31:39 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:31:39 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:31:39 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:31:39 PM: Finished problem compilation (took 1.303e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2511
  constraints   = 5011
  nnz(P)        = 0
  nnz(A)        = 20011
  cones (total) = 1
    : Nonnegative = 1,  numel = 5011

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0009e-01  +2.5007e+03  2.50e+03  9.78e-01  6.52e+01  1.00e+00  1.00e+00   ------   
  1  +5.9956e-01  +5.0122e+02  5.01e+02  3.62e-01  3.80e+01  3.99e-03  5.02e-01  6.45e-01  
  2  +5.4613e-01  +7.1640e+01  7.11e+01  1.41e-01  1.85e+01  9.85e-03  2.35e-01  7.79e-01  
  3  +5.1037e-01  +1.6744e+01  1.62e+01  1.01e-01  1.29e+01  2.29e-05  2.31e-01  9.67e-02  
  4  +5.0009e-01  +9.3343e-01  4.33e-01  4.14e-03  5.40e-01  6.37e-06  1.26e-01  9.90e-01  
  5  +5.0001e-01  +5.7491e-01  7.49e-02  7.11e-04  9.33e-02  1.25e-06  2.47e-02  8.16e-01  
  6  +4.9990e-01  +5.9991e-01  1.00e-01  8.91e-04  1.17e-01  4.48e-06  7.69e-03  7.58e-01  
  7  +4.9545e-01  +5.7318e-01  7.77e-02  6.54e-05  8.64e-03  1.09e-04  2.14e-04  9.74e-01  
  8  +4.8656e-01  +5.2271e-01  3.62e-02  1.65e-05  2.18e-03  9.30e-05  5.62e-05  7.87e-01  
  9  +4.7848e-01  +4.8821e-01  9.73e-03  4.00e-06  5.28e-04  1.39e-05  1.56e-05  7.96e-01  
 10  +4.7554e-01  +4.7624e-01  6.97e-04  2.80e-07  3.69e-05  3.09e-07  1.15e-06  9.71e-01  
 11  +4.7530e-01  +4.7531e-01  7.24e-06  2.90e-09  3.83e-07  3.10e-09  1.20e-08  9.90e-01  
 12  +4.7530e-01  +4.7530e-01  7.24e-08  2.90e-11  3.83e-09  3.10e-11  1.20e-10  9.90e-01  
 13  +4.7530e-01  +4.7530e-01  7.24e-10  2.90e-13  3.83e-11  3.11e-13  1.20e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 26.1953ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Problem status: optimal
(CVXPY) Sep 20 07:31:39 PM: Optimal value: 4.753e-01
(CVXPY) Sep 20 07:31:39 PM: Compilation took 1.303e-02 seconds
(CVXPY) Sep 20 07:31:39 PM: Solver (including time spent in interface) took 2.958e-02 seconds
Initial LP solved
Iteration: 1, Objective: 0.4753
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:31:39 PM: Your problem has 2521 variables, 2500 constraints, and 0 parameters.
(CVXPY) Sep 20 07:31:39 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:31:39 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:31:39 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:31:39 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:31:39 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:31:39 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:31:39 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:31:39 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:31:39 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:31:39 PM: Finished problem compilation (took 9.507e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2521
  constraints   = 5021
  nnz(P)        = 0
  nnz(A)        = 23054
  cones (total) = 1
    : Nonnegative = 1,  numel = 5021

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0007e-01  +2.5013e+03  2.50e+03  9.78e-01  6.68e+01  1.00e+00  1.00e+00   ------   
  1  +5.9941e-01  +5.0146e+02  5.01e+02  3.62e-01  3.90e+01  3.99e-03  5.03e-01  6.45e-01  
  2  +5.4595e-01  +7.1454e+01  7.09e+01  1.41e-01  1.89e+01  9.89e-03  2.35e-01  7.81e-01  
  3  +5.1029e-01  +1.6661e+01  1.62e+01  1.01e-01  1.31e+01  2.29e-05  2.31e-01  9.90e-02  
  4  +5.0050e-01  +1.5775e+00  1.08e+00  1.03e-02  1.36e+00  7.21e-06  1.73e-01  5.42e-01  
  5  +5.0007e-01  +6.9090e-01  1.91e-01  1.81e-03  2.43e-01  1.64e-06  5.54e-02  7.38e-01  
  6  +5.0005e-01  +6.6647e-01  1.66e-01  1.58e-03  2.12e-01  1.67e-06  3.53e-02  4.70e-01  
  7  +5.0002e-01  +6.6798e-01  1.68e-01  1.55e-03  2.08e-01  2.37e-06  1.80e-02  6.36e-01  
  8  +4.9999e-01  +6.6033e-01  1.60e-01  1.20e-03  1.62e-01  2.85e-06  6.53e-03  9.90e-01  
  9  +4.9789e-01  +6.3559e-01  1.38e-01  1.02e-04  1.38e-02  4.29e-05  3.32e-04  9.51e-01  
 10  +4.9384e-01  +5.8569e-01  9.18e-02  6.53e-05  8.85e-03  1.91e-05  2.17e-04  5.04e-01  
 11  +4.9023e-01  +5.5617e-01  6.59e-02  4.08e-05  5.53e-03  1.27e-05  1.35e-04  4.77e-01  
 12  +4.8867e-01  +5.4616e-01  5.75e-02  3.06e-05  4.15e-03  1.09e-05  9.95e-05  3.87e-01  
 13  +4.8844e-01  +5.4451e-01  5.61e-02  3.06e-05  4.14e-03  1.02e-05  9.93e-05  1.91e-02  
 14  +4.8555e-01  +5.2735e-01  4.18e-02  2.10e-05  2.84e-03  6.33e-06  6.81e-05  4.89e-01  
 15  +4.7902e-01  +4.9175e-01  1.27e-02  4.96e-06  6.71e-04  1.69e-06  1.63e-05  9.77e-01  
 16  +4.7867e-01  +4.9101e-01  1.23e-02  4.30e-06  5.82e-04  1.79e-06  1.37e-05  2.35e-01  
 17  +4.7777e-01  +4.8784e-01  1.01e-02  3.95e-06  5.35e-04  1.12e-06  1.36e-05  6.49e-02  
 18  +4.7743e-01  +4.8754e-01  1.01e-02  3.48e-06  4.72e-04  1.31e-06  1.13e-05  8.22e-01  
 19  +4.7377e-01  +4.7445e-01  6.81e-04  2.25e-07  3.04e-05  5.83e-08  7.50e-07  9.70e-01  
 20  +4.7350e-01  +4.7351e-01  7.23e-06  2.38e-09  3.22e-07  5.97e-10  7.99e-09  9.89e-01  
 21  +4.7350e-01  +4.7350e-01  7.23e-08  2.37e-11  3.21e-09  5.97e-12  7.99e-11  9.90e-01  
 22  +4.7350e-01  +4.7350e-01  7.23e-10  2.38e-13  3.22e-11  6.08e-14  8.14e-13  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 42.9914ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Problem status: optimal
(CVXPY) Sep 20 07:31:39 PM: Optimal value: 4.735e-01
(CVXPY) Sep 20 07:31:39 PM: Compilation took 9.507e-03 seconds
(CVXPY) Sep 20 07:31:39 PM: Solver (including time spent in interface) took 4.659e-02 seconds
Iteration: 2, Objective: 0.4735
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:31:39 PM: Your problem has 2531 variables, 2500 constraints, and 0 parameters.
(CVXPY) Sep 20 07:31:39 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:31:39 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:31:39 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:31:39 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:31:39 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:31:39 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:31:39 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:31:39 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:31:39 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:31:39 PM: Finished problem compilation (took 1.216e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2531
  constraints   = 5031
  nnz(P)        = 0
  nnz(A)        = 26636
  cones (total) = 1
    : Nonnegative = 1,  numel = 5031

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0007e-01  +2.5011e+03  2.50e+03  9.79e-01  6.92e+01  1.00e+00  1.00e+00   ------   
  1  +5.9912e-01  +5.0215e+02  5.02e+02  3.63e-01  4.03e+01  3.99e-03  5.04e-01  6.44e-01  
  2  +5.4566e-01  +7.1191e+01  7.06e+01  1.42e-01  1.95e+01  9.97e-03  2.35e-01  7.84e-01  
  3  +5.1025e-01  +1.6635e+01  1.61e+01  1.01e-01  1.35e+01  2.32e-05  2.31e-01  1.01e-01  
  4  +5.0039e-01  +1.4008e+00  9.00e-01  8.63e-03  1.18e+00  7.06e-06  1.63e-01  6.29e-01  
  5  +5.0007e-01  +6.9127e-01  1.91e-01  1.82e-03  2.53e-01  1.76e-06  5.41e-02  7.05e-01  
  6  +5.0003e-01  +6.5671e-01  1.57e-01  1.48e-03  2.06e-01  1.95e-06  2.65e-02  6.45e-01  
  7  +5.0004e-01  +7.1514e-01  2.15e-01  1.78e-03  2.48e-01  3.05e-06  1.14e-02  9.90e-01  
  8  +4.9766e-01  +6.1557e-01  1.18e-01  9.49e-05  1.33e-02  5.08e-05  3.03e-04  9.76e-01  
  9  +4.9627e-01  +6.0272e-01  1.06e-01  7.37e-05  1.03e-02  4.02e-05  2.33e-04  4.30e-01  
 10  +4.9607e-01  +5.9968e-01  1.04e-01  7.14e-05  1.00e-02  3.35e-05  2.26e-04  1.68e-01  
 11  +4.9394e-01  +5.8864e-01  9.47e-02  5.43e-05  7.61e-03  3.30e-05  1.72e-04  3.07e-01  
 12  +4.9271e-01  +5.7939e-01  8.67e-02  5.04e-05  7.07e-03  2.08e-05  1.61e-04  3.23e-01  
 13  +4.9079e-01  +5.7009e-01  7.93e-02  4.30e-05  6.02e-03  1.77e-05  1.38e-04  2.44e-01  
 14  +4.8708e-01  +5.5147e-01  6.44e-02  3.26e-05  4.57e-03  7.54e-06  1.07e-04  6.51e-01  
 15  +4.8185e-01  +5.2942e-01  4.76e-02  2.18e-05  3.06e-03  5.40e-06  7.32e-05  3.63e-01  
 16  +4.7895e-01  +5.1716e-01  3.82e-02  1.66e-05  2.32e-03  4.02e-06  5.66e-05  4.50e-01  
 17  +4.7425e-01  +4.9773e-01  2.35e-02  9.58e-06  1.34e-03  2.37e-06  3.37e-05  5.50e-01  
 18  +4.7257e-01  +4.9047e-01  1.79e-02  7.09e-06  9.92e-04  1.89e-06  2.53e-05  6.69e-01  
 19  +4.6998e-01  +4.8010e-01  1.01e-02  3.90e-06  5.46e-04  1.16e-06  1.43e-05  9.61e-01  
 20  +4.6669e-01  +4.6770e-01  1.01e-03  3.88e-07  5.42e-05  1.02e-07  1.50e-06  9.90e-01  
 21  +4.6631e-01  +4.6633e-01  2.03e-05  7.81e-09  1.09e-06  1.94e-09  3.08e-08  9.80e-01  
 22  +4.6630e-01  +4.6630e-01  2.03e-07  7.80e-11  1.09e-08  1.94e-11  3.08e-10  9.90e-01  
 23  +4.6630e-01  +4.6630e-01  2.03e-09  7.81e-13  1.09e-10  1.94e-13  3.09e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 49.7651ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Problem status: optimal
(CVXPY) Sep 20 07:31:39 PM: Optimal value: 4.663e-01
(CVXPY) Sep 20 07:31:39 PM: Compilation took 1.216e-02 seconds
(CVXPY) Sep 20 07:31:39 PM: Solver (including time spent in interface) took 5.358e-02 seconds
Iteration: 3, Objective: 0.4663
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:31:39 PM: Your problem has 2541 variables, 2500 constraints, and 0 parameters.
(CVXPY) Sep 20 07:31:39 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:31:39 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:31:39 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:31:39 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:31:39 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:31:39 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:31:39 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:31:39 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:31:39 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:31:39 PM: Finished problem compilation (took 1.251e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2541
  constraints   = 5041
  nnz(P)        = 0
  nnz(A)        = 28338
  cones (total) = 1
    : Nonnegative = 1,  numel = 5041

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0007e-01  +2.5009e+03  2.50e+03  9.79e-01  6.96e+01  1.00e+00  1.00e+00   ------   
  1  +5.9902e-01  +5.0224e+02  5.02e+02  3.64e-01  4.05e+01  3.99e-03  5.04e-01  6.44e-01  
  2  +5.4550e-01  +7.1008e+01  7.05e+01  1.41e-01  1.95e+01  9.98e-03  2.35e-01  7.85e-01  
  3  +5.1023e-01  +1.6615e+01  1.61e+01  1.01e-01  1.36e+01  2.32e-05  2.31e-01  1.02e-01  
  4  +5.0029e-01  +1.2487e+00  7.48e-01  7.18e-03  9.94e-01  6.92e-06  1.52e-01  7.22e-01  
  5  +5.0007e-01  +7.0640e-01  2.06e-01  1.97e-03  2.75e-01  2.12e-06  5.68e-02  6.47e-01  
  6  +5.0004e-01  +6.7526e-01  1.75e-01  1.66e-03  2.32e-01  2.32e-06  3.01e-02  6.02e-01  
  7  +4.9977e-01  +6.7924e-01  1.79e-01  1.16e-03  1.62e-01  8.36e-06  5.21e-03  9.90e-01  
  8  +4.9807e-01  +6.6017e-01  1.62e-01  2.63e-04  3.71e-02  4.13e-05  8.63e-04  8.38e-01  
  9  +4.9787e-01  +6.4079e-01  1.43e-01  1.78e-04  2.51e-02  3.66e-05  5.72e-04  5.54e-01  
 10  +4.9783e-01  +6.2706e-01  1.29e-01  1.38e-04  1.95e-02  2.78e-05  4.41e-04  4.95e-01  
 11  +4.9681e-01  +6.0031e-01  1.04e-01  7.96e-05  1.12e-02  1.27e-05  2.51e-04  9.90e-01  
 12  +4.9435e-01  +5.8886e-01  9.45e-02  5.80e-05  8.20e-03  1.36e-05  1.83e-04  3.23e-01  
 13  +4.9203e-01  +5.7848e-01  8.65e-02  4.94e-05  6.97e-03  1.11e-05  1.58e-04  3.33e-01  
 14  +4.8817e-01  +5.6196e-01  7.38e-02  3.81e-05  5.37e-03  9.02e-06  1.23e-04  3.36e-01  
 15  +4.8534e-01  +5.5029e-01  6.50e-02  3.23e-05  4.56e-03  6.04e-06  1.06e-04  5.62e-01  
 16  +4.7551e-01  +5.1004e-01  3.45e-02  1.46e-05  2.05e-03  3.13e-06  4.96e-05  5.97e-01  
 17  +4.7410e-01  +5.0512e-01  3.10e-02  1.28e-05  1.81e-03  2.85e-06  4.41e-05  2.62e-01  
 18  +4.6914e-01  +4.8624e-01  1.71e-02  6.64e-06  9.35e-04  1.58e-06  2.35e-05  5.14e-01  
 19  +4.6780e-01  +4.8126e-01  1.35e-02  5.11e-06  7.20e-04  1.27e-06  1.82e-05  2.72e-01  
 20  +4.6413e-01  +4.6749e-01  3.36e-03  1.24e-06  1.74e-04  3.84e-07  4.55e-06  9.90e-01  
 21  +4.6293e-01  +4.6327e-01  3.36e-04  1.23e-07  1.74e-05  3.77e-08  4.63e-07  9.02e-01  
 22  +4.6280e-01  +4.6281e-01  3.73e-06  1.37e-09  1.93e-07  4.20e-10  5.15e-09  9.90e-01  
 23  +4.6280e-01  +4.6280e-01  3.73e-08  1.37e-11  1.93e-09  4.20e-12  5.15e-11  9.90e-01  
 24  +4.6280e-01  +4.6280e-01  3.73e-10  1.37e-13  1.93e-11  4.21e-14  5.16e-13  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 54.5556ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Problem status: optimal
(CVXPY) Sep 20 07:31:39 PM: Optimal value: 4.628e-01
(CVXPY) Sep 20 07:31:39 PM: Compilation took 1.251e-02 seconds
(CVXPY) Sep 20 07:31:39 PM: Solver (including time spent in interface) took 5.860e-02 seconds
Iteration: 4, Objective: 0.4628
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:31:39 PM: Your problem has 2549 variables, 2500 constraints, and 0 parameters.
(CVXPY) Sep 20 07:31:39 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:31:39 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:31:39 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:31:39 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:39 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:31:39 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:31:39 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:31:39 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:31:39 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:31:40 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:31:40 PM: Finished problem compilation (took 1.401e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:40 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2549
  constraints   = 5049
  nnz(P)        = 0
  nnz(A)        = 29502
  cones (total) = 1
    : Nonnegative = 1,  numel = 5049

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0006e-01  +2.5009e+03  2.50e+03  9.79e-01  6.98e+01  1.00e+00  1.00e+00   ------   
  1  +5.9844e-01  +5.0377e+02  5.03e+02  3.66e-01  4.08e+01  3.98e-03  5.07e-01  6.42e-01  
  2  +5.4513e-01  +7.0770e+01  7.02e+01  1.42e-01  1.96e+01  1.02e-02  2.36e-01  7.90e-01  
  3  +5.1020e-01  +1.6630e+01  1.61e+01  1.01e-01  1.36e+01  2.38e-05  2.31e-01  1.06e-01  
  4  +5.0023e-01  +1.1579e+00  6.58e-01  6.33e-03  8.79e-01  6.88e-06  1.43e-01  7.99e-01  
  5  +5.0011e-01  +8.3076e-01  3.31e-01  3.17e-03  4.42e-01  3.73e-06  8.17e-02  4.58e-01  
  6  +5.0012e-01  +8.5004e-01  3.50e-01  3.35e-03  4.68e-01  3.77e-06  7.77e-02  1.89e-01  
  7  +5.0004e-01  +7.1767e-01  2.18e-01  2.06e-03  2.88e-01  3.33e-06  3.06e-02  7.64e-01  
  8  +4.9919e-01  +7.0160e-01  2.02e-01  8.15e-04  1.15e-01  2.27e-05  3.09e-03  9.40e-01  
  9  +4.9819e-01  +6.8453e-01  1.86e-01  4.28e-04  6.05e-02  3.75e-05  1.50e-03  5.56e-01  
 10  +4.9826e-01  +6.8437e-01  1.86e-01  4.29e-04  6.06e-02  3.67e-05  1.50e-03  2.22e-02  
 11  +4.9784e-01  +6.7004e-01  1.72e-01  2.99e-04  4.22e-02  3.75e-05  1.02e-03  4.83e-01  
 12  +4.9783e-01  +6.5617e-01  1.58e-01  2.30e-04  3.26e-02  2.83e-05  7.68e-04  5.36e-01  
 13  +4.9662e-01  +6.4310e-01  1.46e-01  1.53e-04  2.16e-02  3.22e-05  5.01e-04  4.66e-01  
 14  +4.9631e-01  +6.3918e-01  1.43e-01  1.45e-04  2.06e-02  2.72e-05  4.78e-04  2.00e-01  
 15  +4.9554e-01  +6.3212e-01  1.37e-01  1.20e-04  1.70e-02  2.38e-05  3.93e-04  3.75e-01  
 16  +4.9145e-01  +5.9860e-01  1.07e-01  6.96e-05  9.85e-03  8.63e-06  2.31e-04  9.90e-01  
 17  +4.8257e-01  +5.5390e-01  7.13e-02  3.70e-05  5.23e-03  5.95e-06  1.28e-04  5.65e-01  
 18  +4.8195e-01  +5.5148e-01  6.95e-02  3.57e-05  5.04e-03  5.74e-06  1.23e-04  1.26e-01  
 19  +4.8028e-01  +5.4471e-01  6.44e-02  3.20e-05  4.53e-03  5.27e-06  1.12e-04  2.25e-01  
 20  +4.7128e-01  +5.0500e-01  3.37e-02  1.52e-05  2.15e-03  2.48e-06  5.59e-05  8.19e-01  
 21  +4.6922e-01  +4.9574e-01  2.65e-02  1.17e-05  1.65e-03  2.00e-06  4.36e-05  2.86e-01  
 22  +4.6715e-01  +4.8666e-01  1.95e-02  8.33e-06  1.18e-03  1.53e-06  3.15e-05  3.59e-01  
 23  +4.6584e-01  +4.8076e-01  1.49e-02  6.28e-06  8.87e-04  1.27e-06  2.40e-05  4.98e-01  
 24  +4.6242e-01  +4.6643e-01  4.00e-03  1.64e-06  2.31e-04  3.49e-07  6.45e-06  7.71e-01  
 25  +4.6239e-01  +4.6636e-01  3.96e-03  1.58e-06  2.23e-04  3.59e-07  6.15e-06  1.33e-01  
 26  +4.6215e-01  +4.6541e-01  3.26e-03  1.28e-06  1.80e-04  3.10e-07  4.98e-06  4.54e-01  
 27  +4.6124e-01  +4.6189e-01  6.52e-04  2.55e-07  3.61e-05  6.32e-08  1.01e-06  9.82e-01  
 28  +4.6101e-01  +4.6104e-01  2.61e-05  1.01e-08  1.43e-06  2.50e-09  4.05e-08  9.61e-01  
 29  +4.6100e-01  +4.6100e-01  2.62e-07  1.02e-10  1.43e-08  2.50e-11  4.05e-10  9.90e-01  
 30  +4.6100e-01  +4.6100e-01  2.62e-09  1.02e-12  1.44e-10  2.57e-13  4.16e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 67.6467ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:40 PM: Problem status: optimal
(CVXPY) Sep 20 07:31:40 PM: Optimal value: 4.610e-01
(CVXPY) Sep 20 07:31:40 PM: Compilation took 1.401e-02 seconds
(CVXPY) Sep 20 07:31:40 PM: Solver (including time spent in interface) took 7.206e-02 seconds
Iteration: 5, Objective: 0.4610
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Sep 20 07:31:40 PM: Your problem has 2550 variables, 2500 constraints, and 0 parameters.
(CVXPY) Sep 20 07:31:40 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Sep 20 07:31:40 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Sep 20 07:31:40 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Sep 20 07:31:40 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:40 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Sep 20 07:31:40 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Sep 20 07:31:40 PM: Applying reduction Dcp2Cone
(CVXPY) Sep 20 07:31:40 PM: Applying reduction CvxAttr2Constr
(CVXPY) Sep 20 07:31:40 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Sep 20 07:31:40 PM: Applying reduction CLARABEL
(CVXPY) Sep 20 07:31:40 PM: Finished problem compilation (took 1.451e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:40 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2550
  constraints   = 5050
  nnz(P)        = 0
  nnz(A)        = 29587
  cones (total) = 1
    : Nonnegative = 1,  numel = 5050

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0006e-01  +2.5009e+03  2.50e+03  9.79e-01  6.99e+01  1.00e+00  1.00e+00   ------   
  1  +5.9844e-01  +5.0377e+02  5.03e+02  3.66e-01  4.08e+01  3.98e-03  5.07e-01  6.42e-01  
  2  +5.4511e-01  +7.0747e+01  7.02e+01  1.42e-01  1.96e+01  1.02e-02  2.36e-01  7.90e-01  
  3  +5.1019e-01  +1.6624e+01  1.61e+01  1.01e-01  1.36e+01  2.38e-05  2.31e-01  1.06e-01  
  4  +5.0023e-01  +1.1569e+00  6.57e-01  6.32e-03  8.78e-01  6.88e-06  1.43e-01  8.00e-01  
  5  +5.0011e-01  +8.2804e-01  3.28e-01  3.14e-03  4.39e-01  3.71e-06  8.11e-02  4.60e-01  
  6  +5.0012e-01  +8.4864e-01  3.49e-01  3.34e-03  4.66e-01  3.77e-06  7.74e-02  1.85e-01  
  7  +5.0003e-01  +7.1547e-01  2.15e-01  2.04e-03  2.85e-01  3.42e-06  2.93e-02  7.84e-01  
  8  +4.9902e-01  +7.1868e-01  2.20e-01  7.65e-04  1.08e-01  2.70e-05  2.82e-03  9.51e-01  
  9  +4.9728e-01  +6.9387e-01  1.97e-01  3.30e-04  4.67e-02  5.27e-05  1.14e-03  6.19e-01  
 10  +4.9820e-01  +6.8886e-01  1.91e-01  3.15e-04  4.45e-02  4.03e-05  1.06e-03  2.90e-01  
 11  +4.9772e-01  +6.5250e-01  1.55e-01  1.79e-04  2.53e-02  2.74e-05  5.92e-04  8.24e-01  
 12  +4.9631e-01  +6.4183e-01  1.46e-01  1.29e-04  1.83e-02  3.06e-05  4.27e-04  3.56e-01  
 13  +4.9274e-01  +6.0998e-01  1.17e-01  8.14e-05  1.15e-02  1.26e-05  2.72e-04  8.76e-01  
 14  +4.8532e-01  +5.6870e-01  8.34e-02  4.75e-05  6.71e-03  8.48e-06  1.63e-04  5.56e-01  
 15  +4.8449e-01  +5.6522e-01  8.07e-02  4.38e-05  6.20e-03  8.17e-06  1.50e-04  1.67e-01  
 16  +4.8324e-01  +5.5975e-01  7.65e-02  3.96e-05  5.60e-03  7.69e-06  1.36e-04  1.67e-01  
 17  +4.8198e-01  +5.5418e-01  7.22e-02  3.69e-05  5.22e-03  6.66e-06  1.28e-04  2.88e-01  
 18  +4.7811e-01  +5.3696e-01  5.89e-02  2.87e-05  4.06e-03  5.16e-06  1.02e-04  3.14e-01  
 19  +4.6797e-01  +4.9053e-01  2.26e-02  9.88e-06  1.39e-03  1.72e-06  3.72e-05  7.23e-01  
 20  +4.6650e-01  +4.8401e-01  1.75e-02  7.46e-06  1.05e-03  1.39e-06  2.83e-05  3.25e-01  
 21  +4.6294e-01  +4.6850e-01  5.56e-03  2.28e-06  3.22e-04  5.15e-07  8.95e-06  9.20e-01  
 22  +4.6261e-01  +4.6718e-01  4.57e-03  1.82e-06  2.57e-04  4.44e-07  7.07e-06  3.33e-01  
 23  +4.6236e-01  +4.6620e-01  3.84e-03  1.51e-06  2.13e-04  3.83e-07  5.86e-06  4.07e-01  
 24  +4.6171e-01  +4.6361e-01  1.91e-03  7.52e-07  1.06e-04  1.94e-07  2.96e-06  9.90e-01  
 25  +4.6113e-01  +4.6148e-01  3.55e-04  1.38e-07  1.95e-05  3.57e-08  5.50e-07  8.25e-01  
 26  +4.6100e-01  +4.6101e-01  4.03e-06  1.57e-09  2.21e-07  4.02e-10  6.25e-09  9.89e-01  
 27  +4.6100e-01  +4.6100e-01  4.04e-08  1.57e-11  2.21e-09  4.02e-12  6.25e-11  9.90e-01  
 28  +4.6100e-01  +4.6100e-01  4.04e-10  1.57e-13  2.21e-11  4.07e-14  6.33e-13  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 63.6571ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Sep 20 07:31:40 PM: Problem status: optimal
(CVXPY) Sep 20 07:31:40 PM: Optimal value: 4.610e-01
(CVXPY) Sep 20 07:31:40 PM: Compilation took 1.451e-02 seconds
(CVXPY) Sep 20 07:31:40 PM: Solver (including time spent in interface) took 6.842e-02 seconds
FULL MODEL:
  Accruacy: 0.5312
  Our objective: 0.06240000000000001

IF 
    (x0 = 0 AND x1 = 0 AND x2 = 0 AND x3 = 0 AND x4 = 0) <-- (term's our objective: 0.0376)
 OR (x0 = 0 AND x1 = 0 AND x2 = 1 AND x3 = 1 AND x4 = 1) <-- (term's our objective: 0.0032)
 OR (x0 = 0 AND x2 = 1 AND x4 = 0)                       <-- (term's our objective: 0.0148)
 OR (x0 = 1 AND x1 = 0 AND x2 = 1 AND x3 = 0 AND x4 = 1) <-- (term's our objective: 0.0068)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 4.377241611480713
Best over terms:
  Our final objective: 0.037599999999999974
    Its accruacy: 0.5188
    Its hamming distance: 0
  Shortest hamming distance: 0
    Its our objective: 0.037599999999999974
  Highest accruacy: 0.5188
  static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step      
Errors:
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 1 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 2 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 3 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 4 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 5 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 6 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 7 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 8 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 9 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 10 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 11 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 12 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 13 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 14 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 15 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 16 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 17 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 18 times so far.

  warnings.warn(msg, UserWarning)
C:\personal\work\DNF_bias\src\aix360\aix360\algorithms\rbm\beam_search.py:58: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  zOut = pd.Series(index=X.columns)

