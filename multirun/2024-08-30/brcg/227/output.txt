Command:
python test_script.py -s smallest_subclass -d 6 -n 5000 --seed 73 -m brcg --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.018750000000000003
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.0184
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 5000 remain. 
Dimension is 6.

Computed total variation: 0.0932
BRCG
Learning DNF rule with complexity parameters lambda0=0.0001, lambda1=0
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 30 12:09:35 PM: Your problem has 2513 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 30 12:09:35 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 30 12:09:35 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 30 12:09:35 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 30 12:09:35 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 30 12:09:35 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 30 12:09:35 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 30 12:09:35 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 30 12:09:35 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 30 12:09:35 PM: Applying reduction CLARABEL
(CVXPY) Aug 30 12:09:35 PM: Finished problem compilation (took 0.000e+00 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2513
  constraints   = 5013
  nnz(P)        = 0
  nnz(A)        = 22513
  cones (total) = 1
    : Nonnegative = 1,  numel = 5013

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0010e-01  +2.5007e+03  2.50e+03  9.79e-01  6.97e+01  1.00e+00  1.00e+00   ------   
  1  +5.9311e-01  +5.1464e+02  5.14e+02  3.83e-01  4.22e+01  3.92e-03  5.25e-01  6.27e-01  
  2  +5.4182e-01  +6.8291e+01  6.77e+01  1.47e-01  2.04e+01  1.15e-02  2.44e-01  8.26e-01  
  3  +5.1004e-01  +1.6855e+01  1.63e+01  1.03e-01  1.40e+01  2.84e-05  2.38e-01  1.30e-01  
  4  +5.0023e-01  +9.9849e-01  4.98e-01  4.79e-03  6.67e-01  6.55e-06  1.19e-01  9.90e-01  
  5  +5.0002e-01  +5.7508e-01  7.51e-02  7.12e-04  9.99e-02  1.43e-06  2.46e-02  8.17e-01  
  6  +4.9998e-01  +5.6722e-01  6.72e-02  6.24e-04  8.76e-02  2.92e-06  7.80e-03  7.40e-01  
  7  +4.9766e-01  +5.6718e-01  6.95e-02  7.24e-05  1.02e-02  8.76e-05  2.30e-04  9.81e-01  
  8  +4.9234e-01  +5.3403e-01  4.17e-02  2.18e-05  3.08e-03  1.12e-04  7.00e-05  7.23e-01  
  9  +4.8529e-01  +4.9768e-01  1.24e-02  5.72e-06  8.08e-04  1.08e-05  2.07e-05  8.09e-01  
 10  +4.8148e-01  +4.8253e-01  1.06e-03  4.25e-07  6.00e-05  4.84e-07  1.73e-06  9.44e-01  
 11  +4.8110e-01  +4.8112e-01  1.38e-05  5.51e-09  7.79e-07  5.03e-09  2.26e-08  9.90e-01  
 12  +4.8110e-01  +4.8110e-01  1.38e-07  5.51e-11  7.78e-09  5.03e-11  2.26e-10  9.90e-01  
 13  +4.8110e-01  +4.8110e-01  1.38e-09  5.52e-13  7.79e-11  5.13e-13  2.31e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 20.6351ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Problem status: optimal
(CVXPY) Aug 30 12:09:35 PM: Optimal value: 4.811e-01
(CVXPY) Aug 30 12:09:35 PM: Compilation took 0.000e+00 seconds
(CVXPY) Aug 30 12:09:35 PM: Solver (including time spent in interface) took 3.125e-02 seconds
Initial LP solved
Iteration: 1, Objective: 0.4811
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 30 12:09:35 PM: Your problem has 2523 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 30 12:09:35 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 30 12:09:35 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 30 12:09:35 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 30 12:09:35 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 30 12:09:35 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 30 12:09:35 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 30 12:09:35 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 30 12:09:35 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 30 12:09:35 PM: Applying reduction CLARABEL
(CVXPY) Aug 30 12:09:35 PM: Finished problem compilation (took 1.564e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2523
  constraints   = 5023
  nnz(P)        = 0
  nnz(A)        = 26140
  cones (total) = 1
    : Nonnegative = 1,  numel = 5023

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0008e-01  +2.5008e+03  2.50e+03  9.79e-01  7.18e+01  1.00e+00  1.00e+00   ------   
  1  +5.9296e-01  +5.1488e+02  5.14e+02  3.84e-01  4.35e+01  3.92e-03  5.26e-01  6.26e-01  
  2  +5.4160e-01  +6.8068e+01  6.75e+01  1.46e-01  2.09e+01  1.15e-02  2.44e-01  8.28e-01  
  3  +5.0997e-01  +1.6776e+01  1.63e+01  1.03e-01  1.44e+01  2.85e-05  2.38e-01  1.33e-01  
  4  +5.0023e-01  +1.0061e+00  5.06e-01  4.87e-03  6.99e-01  6.69e-06  1.18e-01  9.90e-01  
  5  +5.0007e-01  +6.7945e-01  1.79e-01  1.71e-03  2.47e-01  2.83e-06  5.02e-02  5.86e-01  
  6  +5.0008e-01  +6.8880e-01  1.89e-01  1.80e-03  2.59e-01  2.79e-06  4.42e-02  3.01e-01  
  7  +4.9998e-01  +5.8324e-01  8.33e-02  7.73e-04  1.12e-01  3.09e-06  9.16e-03  8.57e-01  
  8  +4.9782e-01  +6.0389e-01  1.06e-01  1.23e-04  1.79e-02  8.18e-05  3.99e-04  9.70e-01  
  9  +4.9532e-01  +5.7841e-01  8.31e-02  6.65e-05  9.69e-03  7.98e-05  2.14e-04  5.53e-01  
 10  +4.9420e-01  +5.6527e-01  7.11e-02  5.06e-05  7.38e-03  4.87e-05  1.61e-04  4.79e-01  
 11  +4.9265e-01  +5.5361e-01  6.10e-02  3.80e-05  5.54e-03  3.23e-05  1.20e-04  4.62e-01  
 12  +4.9116e-01  +5.4529e-01  5.41e-02  2.99e-05  4.35e-03  2.84e-05  9.37e-05  2.90e-01  
 13  +4.8979e-01  +5.3485e-01  4.51e-02  2.01e-05  2.93e-03  9.30e-06  6.16e-05  8.34e-01  
 14  +4.8937e-01  +5.3324e-01  4.39e-02  1.77e-05  2.58e-03  7.71e-06  5.40e-05  4.17e-01  
 15  +4.8863e-01  +5.3048e-01  4.19e-02  1.75e-05  2.54e-03  6.77e-06  5.35e-05  8.85e-02  
 16  +4.8299e-01  +5.0886e-01  2.59e-02  9.29e-06  1.35e-03  3.85e-06  2.90e-05  5.96e-01  
 17  +4.7542e-01  +4.7893e-01  3.52e-03  1.18e-06  1.71e-04  3.08e-07  3.84e-06  9.43e-01  
 18  +4.7394e-01  +4.7403e-01  9.02e-05  2.95e-08  4.30e-06  7.52e-09  9.89e-08  9.78e-01  
 19  +4.7390e-01  +4.7390e-01  9.02e-07  2.95e-10  4.29e-08  7.51e-11  9.89e-10  9.90e-01  
 20  +4.7390e-01  +4.7390e-01  9.02e-09  2.95e-12  4.29e-10  7.51e-13  9.89e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 34.6071ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Problem status: optimal
(CVXPY) Aug 30 12:09:35 PM: Optimal value: 4.739e-01
(CVXPY) Aug 30 12:09:35 PM: Compilation took 1.564e-02 seconds
(CVXPY) Aug 30 12:09:35 PM: Solver (including time spent in interface) took 3.124e-02 seconds
Iteration: 2, Objective: 0.4739
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 30 12:09:35 PM: Your problem has 2533 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 30 12:09:35 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 30 12:09:35 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 30 12:09:35 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 30 12:09:35 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 30 12:09:35 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 30 12:09:35 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 30 12:09:35 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 30 12:09:35 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 30 12:09:35 PM: Applying reduction CLARABEL
(CVXPY) Aug 30 12:09:35 PM: Finished problem compilation (took 0.000e+00 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2533
  constraints   = 5033
  nnz(P)        = 0
  nnz(A)        = 28724
  cones (total) = 1
    : Nonnegative = 1,  numel = 5033

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0008e-01  +2.5012e+03  2.50e+03  9.79e-01  7.28e+01  1.00e+00  1.00e+00   ------   
  1  +5.9282e-01  +5.1513e+02  5.15e+02  3.84e-01  4.40e+01  3.91e-03  5.27e-01  6.26e-01  
  2  +5.4145e-01  +6.7929e+01  6.74e+01  1.46e-01  2.11e+01  1.16e-02  2.44e-01  8.29e-01  
  3  +5.0993e-01  +1.6740e+01  1.62e+01  1.03e-01  1.45e+01  2.86e-05  2.38e-01  1.35e-01  
  4  +5.0049e-01  +1.4270e+00  9.26e-01  8.92e-03  1.29e+00  7.30e-06  1.53e-01  6.93e-01  
  5  +5.0012e-01  +7.7807e-01  2.78e-01  2.65e-03  3.86e-01  2.99e-06  7.23e-02  5.79e-01  
  6  +5.0006e-01  +6.7805e-01  1.78e-01  1.69e-03  2.47e-01  2.43e-06  3.53e-02  6.10e-01  
  7  +4.9988e-01  +6.1176e-01  1.12e-01  9.18e-04  1.34e-01  5.94e-06  5.81e-03  8.83e-01  
  8  +4.9857e-01  +6.0233e-01  1.04e-01  2.21e-04  3.25e-02  3.95e-05  7.50e-04  8.73e-01  
  9  +4.9744e-01  +5.9277e-01  9.53e-02  1.31e-04  1.93e-02  4.71e-05  4.27e-04  5.84e-01  
 10  +4.9558e-01  +5.7984e-01  8.43e-02  7.12e-05  1.05e-02  3.64e-05  2.22e-04  8.46e-01  
 11  +4.9465e-01  +5.7793e-01  8.33e-02  5.47e-05  8.07e-03  3.87e-05  1.70e-04  3.57e-01  
 12  +4.9409e-01  +5.7526e-01  8.12e-02  5.45e-05  8.04e-03  3.52e-05  1.69e-04  4.81e-02  
 13  +4.9122e-01  +5.6401e-01  7.28e-02  3.99e-05  5.88e-03  1.78e-05  1.24e-04  6.92e-01  
 14  +4.8161e-01  +5.2301e-01  4.14e-02  1.73e-05  2.55e-03  1.02e-05  5.54e-05  6.43e-01  
 15  +4.7362e-01  +4.8934e-01  1.57e-02  6.17e-06  9.09e-04  3.23e-06  2.04e-05  6.66e-01  
 16  +4.7191e-01  +4.8227e-01  1.04e-02  3.82e-06  5.63e-04  1.88e-06  1.27e-05  6.22e-01  
 17  +4.7120e-01  +4.7913e-01  7.94e-03  2.97e-06  4.38e-04  9.26e-07  1.02e-05  9.90e-01  
 18  +4.6951e-01  +4.7292e-01  3.41e-03  1.24e-06  1.83e-04  4.33e-07  4.27e-06  7.26e-01  
 19  +4.6827e-01  +4.6889e-01  6.27e-04  2.19e-07  3.23e-05  6.77e-08  7.69e-07  9.72e-01  
 20  +4.6802e-01  +4.6806e-01  4.16e-05  1.43e-08  2.11e-06  4.66e-09  5.06e-08  9.43e-01  
 21  +4.6800e-01  +4.6801e-01  4.20e-06  1.45e-09  2.13e-07  5.19e-10  5.10e-09  9.58e-01  
 22  +4.6800e-01  +4.6800e-01  4.25e-08  1.47e-11  2.16e-09  5.26e-12  5.18e-11  9.90e-01  
 23  +4.6800e-01  +4.6800e-01  4.26e-10  1.47e-13  2.16e-11  5.49e-14  5.39e-13  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 39.7097ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Problem status: optimal
(CVXPY) Aug 30 12:09:35 PM: Optimal value: 4.680e-01
(CVXPY) Aug 30 12:09:35 PM: Compilation took 0.000e+00 seconds
(CVXPY) Aug 30 12:09:35 PM: Solver (including time spent in interface) took 4.689e-02 seconds
Iteration: 3, Objective: 0.4680
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 30 12:09:35 PM: Your problem has 2543 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 30 12:09:35 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 30 12:09:35 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 30 12:09:35 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 30 12:09:35 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 30 12:09:35 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 30 12:09:35 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 30 12:09:35 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 30 12:09:35 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 30 12:09:35 PM: Applying reduction CLARABEL
(CVXPY) Aug 30 12:09:35 PM: Finished problem compilation (took 1.564e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2543
  constraints   = 5043
  nnz(P)        = 0
  nnz(A)        = 30330
  cones (total) = 1
    : Nonnegative = 1,  numel = 5043

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0008e-01  +2.5013e+03  2.50e+03  9.79e-01  7.31e+01  1.00e+00  1.00e+00   ------   
  1  +5.9274e-01  +5.1520e+02  5.15e+02  3.85e-01  4.42e+01  3.91e-03  5.27e-01  6.26e-01  
  2  +5.4140e-01  +6.7883e+01  6.73e+01  1.46e-01  2.11e+01  1.16e-02  2.44e-01  8.30e-01  
  3  +5.0991e-01  +1.6722e+01  1.62e+01  1.03e-01  1.45e+01  2.86e-05  2.37e-01  1.36e-01  
  4  +5.0051e-01  +1.4593e+00  9.59e-01  9.24e-03  1.34e+00  7.38e-06  1.54e-01  6.79e-01  
  5  +5.0014e-01  +8.2153e-01  3.21e-01  3.07e-03  4.49e-01  3.32e-06  7.90e-02  5.36e-01  
  6  +5.0007e-01  +7.1885e-01  2.19e-01  2.08e-03  3.05e-01  2.92e-06  3.91e-02  6.38e-01  
  7  +4.9990e-01  +6.9316e-01  1.93e-01  1.57e-03  2.31e-01  7.15e-06  9.77e-03  8.23e-01  
  8  +4.9569e-01  +6.4940e-01  1.54e-01  1.29e-04  1.92e-02  1.15e-04  4.24e-04  9.63e-01  
  9  +4.9257e-01  +6.2463e-01  1.32e-01  8.97e-05  1.33e-02  1.04e-04  2.92e-04  3.94e-01  
 10  +4.9331e-01  +6.2886e-01  1.36e-01  8.95e-05  1.33e-02  9.99e-05  2.88e-04  1.04e-01  
 11  +4.9216e-01  +6.2272e-01  1.31e-01  7.53e-05  1.12e-02  9.48e-05  2.42e-04  2.55e-01  
 12  +4.8977e-01  +6.0133e-01  1.12e-01  6.60e-05  9.79e-03  5.29e-05  2.18e-04  3.12e-01  
 13  +4.8348e-01  +5.6156e-01  7.81e-02  4.09e-05  6.05e-03  1.00e-05  1.39e-04  7.92e-01  
 14  +4.7597e-01  +5.2591e-01  4.99e-02  2.36e-05  3.49e-03  4.82e-06  8.34e-05  6.53e-01  
 15  +4.7493e-01  +5.2092e-01  4.60e-02  2.13e-05  3.15e-03  4.33e-06  7.56e-05  3.16e-01  
 16  +4.7389e-01  +5.1614e-01  4.23e-02  1.91e-05  2.82e-03  3.97e-06  6.80e-05  3.41e-01  
 17  +4.7383e-01  +5.1575e-01  4.19e-02  1.87e-05  2.77e-03  3.97e-06  6.67e-05  1.66e-01  
 18  +4.6326e-01  +4.7047e-01  7.21e-03  3.01e-06  4.45e-04  5.01e-07  1.14e-05  9.62e-01  
 19  +4.6170e-01  +4.6421e-01  2.51e-03  1.02e-06  1.50e-04  2.03e-07  3.84e-06  7.34e-01  
 20  +4.6171e-01  +4.6435e-01  2.64e-03  1.01e-06  1.49e-04  2.29e-07  3.74e-06  5.73e-02  
 21  +4.6171e-01  +4.6433e-01  2.62e-03  1.01e-06  1.49e-04  2.27e-07  3.74e-06  5.24e-03  
 22  +4.6166e-01  +4.6415e-01  2.49e-03  9.91e-07  1.47e-04  2.08e-07  3.70e-06  4.97e-02  
 23  +4.6112e-01  +4.6238e-01  1.26e-03  4.89e-07  7.23e-05  1.06e-07  1.83e-06  7.54e-01  
 24  +4.6072e-01  +4.6077e-01  5.16e-05  1.96e-08  2.90e-06  4.73e-09  7.35e-08  9.61e-01  
 25  +4.6070e-01  +4.6070e-01  5.17e-07  1.97e-10  2.91e-08  4.74e-11  7.38e-10  9.90e-01  
 26  +4.6070e-01  +4.6070e-01  5.17e-09  1.97e-12  2.91e-10  4.79e-13  7.45e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 47.9258ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:35 PM: Problem status: optimal
(CVXPY) Aug 30 12:09:35 PM: Optimal value: 4.607e-01
(CVXPY) Aug 30 12:09:35 PM: Compilation took 1.564e-02 seconds
(CVXPY) Aug 30 12:09:35 PM: Solver (including time spent in interface) took 4.687e-02 seconds
Iteration: 4, Objective: 0.4607
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 30 12:09:36 PM: Your problem has 2553 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 30 12:09:36 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 30 12:09:36 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 30 12:09:36 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 30 12:09:36 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 30 12:09:36 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 30 12:09:36 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Finished problem compilation (took 0.000e+00 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2553
  constraints   = 5053
  nnz(P)        = 0
  nnz(A)        = 31460
  cones (total) = 1
    : Nonnegative = 1,  numel = 5053

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0008e-01  +2.5013e+03  2.50e+03  9.79e-01  7.33e+01  1.00e+00  1.00e+00   ------   
  1  +5.9273e-01  +5.1514e+02  5.15e+02  3.85e-01  4.42e+01  3.91e-03  5.27e-01  6.26e-01  
  2  +5.4137e-01  +6.7850e+01  6.73e+01  1.46e-01  2.10e+01  1.16e-02  2.44e-01  8.30e-01  
  3  +5.0990e-01  +1.6705e+01  1.62e+01  1.03e-01  1.45e+01  2.86e-05  2.37e-01  1.37e-01  
  4  +5.0046e-01  +1.3847e+00  8.84e-01  8.54e-03  1.24e+00  7.30e-06  1.49e-01  7.19e-01  
  5  +5.0013e-01  +8.0865e-01  3.09e-01  2.95e-03  4.33e-01  3.34e-06  7.55e-02  5.35e-01  
  6  +5.0008e-01  +7.3599e-01  2.36e-01  2.25e-03  3.30e-01  3.15e-06  4.26e-02  5.47e-01  
  7  +4.9996e-01  +7.2159e-01  2.22e-01  1.86e-03  2.74e-01  6.29e-06  1.23e-02  8.74e-01  
  8  +4.9825e-01  +6.9205e-01  1.94e-01  3.31e-04  4.91e-02  5.21e-05  1.11e-03  9.14e-01  
  9  +4.9744e-01  +6.3771e-01  1.40e-01  1.60e-04  2.38e-02  3.19e-05  5.19e-04  8.96e-01  
 10  +4.9479e-01  +6.1408e-01  1.19e-01  8.76e-05  1.30e-02  2.88e-05  2.79e-04  7.50e-01  
 11  +4.9451e-01  +6.1265e-01  1.18e-01  8.71e-05  1.29e-02  2.78e-05  2.79e-04  2.18e-02  
 12  +4.9425e-01  +6.1174e-01  1.17e-01  8.43e-05  1.25e-02  2.51e-05  2.69e-04  1.57e-01  
 13  +4.8997e-01  +5.9166e-01  1.02e-01  5.73e-05  8.50e-03  2.33e-05  1.85e-04  4.18e-01  
 14  +4.8729e-01  +5.7810e-01  9.08e-02  5.15e-05  7.65e-03  1.13e-05  1.70e-04  5.16e-01  
 15  +4.7854e-01  +5.3839e-01  5.98e-02  2.87e-05  4.26e-03  6.81e-06  9.82e-05  5.43e-01  
 16  +4.7658e-01  +5.3005e-01  5.35e-02  2.49e-05  3.69e-03  5.86e-06  8.58e-05  2.35e-01  
 17  +4.7410e-01  +5.1939e-01  4.53e-02  2.03e-05  3.01e-03  4.78e-06  7.06e-05  3.25e-01  
 18  +4.7009e-01  +5.0216e-01  3.21e-02  1.35e-05  2.00e-03  3.14e-06  4.76e-05  7.90e-01  
 19  +4.6591e-01  +4.8530e-01  1.94e-02  7.89e-06  1.17e-03  1.88e-06  2.85e-05  4.36e-01  
 20  +4.6074e-01  +4.6451e-01  3.77e-03  1.46e-06  2.17e-04  3.97e-07  5.45e-06  9.34e-01  
 21  +4.6044e-01  +4.6348e-01  3.04e-03  1.10e-06  1.63e-04  3.48e-07  4.01e-06  3.42e-01  
 22  +4.6043e-01  +4.6345e-01  3.01e-03  1.10e-06  1.63e-04  3.43e-07  4.01e-06  3.90e-03  
 23  +4.6023e-01  +4.6273e-01  2.50e-03  9.75e-07  1.44e-04  2.36e-07  3.82e-06  2.11e-01  
 24  +4.6021e-01  +4.6264e-01  2.43e-03  9.49e-07  1.40e-04  2.33e-07  3.70e-06  1.04e-01  
 25  +4.5988e-01  +4.6137e-01  1.49e-03  5.76e-07  8.52e-05  1.58e-07  2.17e-06  6.43e-01  
 26  +4.5960e-01  +4.6067e-01  1.06e-03  3.83e-07  5.67e-05  1.16e-07  1.41e-06  6.11e-01  
 27  +4.5921e-01  +4.5923e-01  2.06e-05  7.41e-09  1.10e-06  2.24e-09  2.73e-08  9.82e-01  
 28  +4.5920e-01  +4.5920e-01  2.06e-07  7.42e-11  1.10e-08  2.24e-11  2.73e-10  9.90e-01  
 29  +4.5920e-01  +4.5920e-01  2.06e-09  7.42e-13  1.10e-10  2.25e-13  2.75e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 54.8618ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Problem status: optimal
(CVXPY) Aug 30 12:09:36 PM: Optimal value: 4.592e-01
(CVXPY) Aug 30 12:09:36 PM: Compilation took 0.000e+00 seconds
(CVXPY) Aug 30 12:09:36 PM: Solver (including time spent in interface) took 6.250e-02 seconds
Iteration: 5, Objective: 0.4592
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 30 12:09:36 PM: Your problem has 2554 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 30 12:09:36 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 30 12:09:36 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 30 12:09:36 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 30 12:09:36 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 30 12:09:36 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 30 12:09:36 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Finished problem compilation (took 1.562e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2554
  constraints   = 5054
  nnz(P)        = 0
  nnz(A)        = 31803
  cones (total) = 1
    : Nonnegative = 1,  numel = 5054

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0008e-01  +2.5013e+03  2.50e+03  9.79e-01  7.34e+01  1.00e+00  1.00e+00   ------   
  1  +5.9271e-01  +5.1519e+02  5.15e+02  3.85e-01  4.43e+01  3.91e-03  5.27e-01  6.26e-01  
  2  +5.4135e-01  +6.7832e+01  6.73e+01  1.46e-01  2.11e+01  1.16e-02  2.44e-01  8.30e-01  
  3  +5.0990e-01  +1.6702e+01  1.62e+01  1.03e-01  1.45e+01  2.87e-05  2.37e-01  1.37e-01  
  4  +5.0046e-01  +1.3783e+00  8.78e-01  8.47e-03  1.23e+00  7.29e-06  1.49e-01  7.23e-01  
  5  +5.0013e-01  +8.0190e-01  3.02e-01  2.89e-03  4.24e-01  3.31e-06  7.41e-02  5.43e-01  
  6  +5.0008e-01  +7.3993e-01  2.40e-01  2.28e-03  3.36e-01  3.22e-06  4.33e-02  5.20e-01  
  7  +4.9996e-01  +7.3346e-01  2.33e-01  1.92e-03  2.83e-01  6.66e-06  1.19e-02  9.21e-01  
  8  +4.9755e-01  +6.8596e-01  1.88e-01  2.32e-04  3.45e-02  7.06e-05  7.66e-04  9.40e-01  
  9  +4.9772e-01  +6.7171e-01  1.74e-01  2.06e-04  3.06e-02  5.14e-05  6.68e-04  3.38e-01  
 10  +4.9678e-01  +6.3897e-01  1.42e-01  1.34e-04  1.99e-02  2.97e-05  4.27e-04  7.18e-01  
 11  +4.9547e-01  +6.2719e-01  1.32e-01  9.97e-05  1.48e-02  2.75e-05  3.16e-04  4.40e-01  
 12  +4.9501e-01  +6.2419e-01  1.29e-01  9.89e-05  1.47e-02  2.55e-05  3.15e-04  5.01e-02  
 13  +4.9062e-01  +6.0011e-01  1.09e-01  6.15e-05  9.14e-03  2.41e-05  1.98e-04  5.07e-01  
 14  +4.8884e-01  +5.8983e-01  1.01e-01  5.64e-05  8.38e-03  1.81e-05  1.83e-04  2.57e-01  
 15  +4.7761e-01  +5.3537e-01  5.78e-02  2.68e-05  3.98e-03  8.52e-06  9.09e-05  6.24e-01  
 16  +4.7537e-01  +5.2561e-01  5.02e-02  2.26e-05  3.35e-03  7.10e-06  7.73e-05  2.33e-01  
 17  +4.7319e-01  +5.1614e-01  4.30e-02  1.88e-05  2.79e-03  5.80e-06  6.48e-05  2.64e-01  
 18  +4.6934e-01  +4.9909e-01  2.97e-02  1.24e-05  1.83e-03  3.20e-06  4.35e-05  8.17e-01  
 19  +4.6317e-01  +4.7421e-01  1.10e-02  4.41e-06  6.55e-04  1.14e-06  1.61e-05  6.61e-01  
 20  +4.6029e-01  +4.6290e-01  2.61e-03  1.00e-06  1.49e-04  2.91e-07  3.72e-06  8.21e-01  
 21  +4.6029e-01  +4.6302e-01  2.73e-03  9.89e-07  1.47e-04  3.22e-07  3.61e-06  6.50e-02  
 22  +4.6029e-01  +4.6299e-01  2.71e-03  9.88e-07  1.47e-04  3.18e-07  3.61e-06  5.56e-03  
 23  +4.6014e-01  +4.6239e-01  2.25e-03  8.78e-07  1.30e-04  2.20e-07  3.45e-06  2.00e-01  
 24  +4.6013e-01  +4.6236e-01  2.23e-03  8.69e-07  1.29e-04  2.20e-07  3.39e-06  6.68e-02  
 25  +4.5990e-01  +4.6150e-01  1.60e-03  6.12e-07  9.08e-05  1.75e-07  2.28e-06  5.80e-01  
 26  +4.5955e-01  +4.6045e-01  9.03e-04  3.25e-07  4.83e-05  1.01e-07  1.19e-06  6.07e-01  
 27  +4.5921e-01  +4.5922e-01  1.56e-05  5.62e-09  8.34e-07  1.76e-09  2.07e-08  9.85e-01  
 28  +4.5920e-01  +4.5920e-01  1.57e-07  5.62e-11  8.35e-09  1.76e-11  2.07e-10  9.90e-01  
 29  +4.5920e-01  +4.5920e-01  1.57e-09  5.63e-13  8.35e-11  1.77e-13  2.09e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 50.5227ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Problem status: optimal
(CVXPY) Aug 30 12:09:36 PM: Optimal value: 4.592e-01
(CVXPY) Aug 30 12:09:36 PM: Compilation took 1.562e-02 seconds
(CVXPY) Aug 30 12:09:36 PM: Solver (including time spent in interface) took 4.688e-02 seconds
Iteration: 6, Objective: 0.4592
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 30 12:09:36 PM: Your problem has 2559 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 30 12:09:36 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 30 12:09:36 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 30 12:09:36 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 30 12:09:36 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 30 12:09:36 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 30 12:09:36 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Finished problem compilation (took 0.000e+00 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2559
  constraints   = 5059
  nnz(P)        = 0
  nnz(A)        = 32424
  cones (total) = 1
    : Nonnegative = 1,  numel = 5059

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0008e-01  +2.5014e+03  2.50e+03  9.79e-01  7.35e+01  1.00e+00  1.00e+00   ------   
  1  +5.9268e-01  +5.1529e+02  5.15e+02  3.85e-01  4.43e+01  3.91e-03  5.27e-01  6.26e-01  
  2  +5.4130e-01  +6.7776e+01  6.72e+01  1.47e-01  2.11e+01  1.16e-02  2.44e-01  8.31e-01  
  3  +5.0989e-01  +1.6698e+01  1.62e+01  1.03e-01  1.46e+01  2.87e-05  2.37e-01  1.37e-01  
  4  +5.0048e-01  +1.4085e+00  9.08e-01  8.77e-03  1.28e+00  7.33e-06  1.51e-01  7.07e-01  
  5  +5.0011e-01  +7.6431e-01  2.64e-01  2.53e-03  3.72e-01  3.03e-06  6.68e-02  6.04e-01  
  6  +5.0006e-01  +7.3225e-01  2.32e-01  2.19e-03  3.23e-01  3.65e-06  3.20e-02  7.09e-01  
  7  +4.9965e-01  +6.9396e-01  1.94e-01  1.11e-03  1.65e-01  1.45e-05  4.75e-03  9.04e-01  
  8  +4.9616e-01  +6.5449e-01  1.58e-01  1.61e-04  2.40e-02  9.54e-05  5.32e-04  8.93e-01  
  9  +4.9648e-01  +6.5504e-01  1.59e-01  1.58e-04  2.35e-02  8.72e-05  5.14e-04  1.35e-01  
 10  +4.9425e-01  +6.3736e-01  1.43e-01  1.07e-04  1.60e-02  9.27e-05  3.43e-04  4.10e-01  
 11  +4.9405e-01  +6.3530e-01  1.41e-01  9.51e-05  1.42e-02  8.63e-05  3.02e-04  2.47e-01  
 12  +4.9325e-01  +6.2387e-01  1.31e-01  9.15e-05  1.36e-02  5.69e-05  2.93e-04  2.36e-01  
 13  +4.8915e-01  +6.0181e-01  1.13e-01  6.45e-05  9.61e-03  5.07e-05  2.09e-04  3.70e-01  
 14  +4.8530e-01  +5.7709e-01  9.18e-02  4.95e-05  7.37e-03  1.99e-05  1.64e-04  5.85e-01  
 15  +4.7321e-01  +5.2109e-01  4.79e-02  2.12e-05  3.16e-03  8.87e-06  7.39e-05  6.32e-01  
 16  +4.7287e-01  +5.1955e-01  4.67e-02  2.07e-05  3.07e-03  8.32e-06  7.19e-05  8.86e-02  
 17  +4.7135e-01  +5.1323e-01  4.19e-02  1.80e-05  2.68e-03  7.04e-06  6.33e-05  2.27e-01  
 18  +4.7091e-01  +5.1135e-01  4.04e-02  1.71e-05  2.54e-03  6.36e-06  5.99e-05  2.21e-01  
 19  +4.6514e-01  +4.8794e-01  2.28e-02  9.12e-06  1.36e-03  3.21e-06  3.31e-05  5.70e-01  
 20  +4.6289e-01  +4.7898e-01  1.61e-02  6.28e-06  9.34e-04  2.22e-06  2.32e-05  3.73e-01  
 21  +4.5950e-01  +4.6529e-01  5.79e-03  2.21e-06  3.28e-04  6.49e-07  8.38e-06  9.90e-01  
 22  +4.5743e-01  +4.5776e-01  3.34e-04  1.27e-07  1.88e-05  3.57e-08  4.92e-07  9.67e-01  
 23  +4.5730e-01  +4.5730e-01  3.35e-06  1.27e-09  1.89e-07  3.58e-10  4.95e-09  9.90e-01  
 24  +4.5730e-01  +4.5730e-01  3.35e-08  1.27e-11  1.89e-09  3.58e-12  4.95e-11  9.90e-01  
 25  +4.5730e-01  +4.5730e-01  3.35e-10  1.27e-13  1.89e-11  3.59e-14  4.97e-13  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 45.5217ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Problem status: optimal
(CVXPY) Aug 30 12:09:36 PM: Optimal value: 4.573e-01
(CVXPY) Aug 30 12:09:36 PM: Compilation took 0.000e+00 seconds
(CVXPY) Aug 30 12:09:36 PM: Solver (including time spent in interface) took 4.688e-02 seconds
Iteration: 7, Objective: 0.4573
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 30 12:09:36 PM: Your problem has 2562 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 30 12:09:36 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 30 12:09:36 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 30 12:09:36 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 30 12:09:36 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 30 12:09:36 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 30 12:09:36 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Finished problem compilation (took 1.563e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2562
  constraints   = 5062
  nnz(P)        = 0
  nnz(A)        = 32592
  cones (total) = 1
    : Nonnegative = 1,  numel = 5062

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0008e-01  +2.5014e+03  2.50e+03  9.79e-01  7.35e+01  1.00e+00  1.00e+00   ------   
  1  +5.9267e-01  +5.1527e+02  5.15e+02  3.85e-01  4.43e+01  3.91e-03  5.27e-01  6.26e-01  
  2  +5.4129e-01  +6.7753e+01  6.72e+01  1.46e-01  2.11e+01  1.16e-02  2.44e-01  8.31e-01  
  3  +5.0989e-01  +1.6695e+01  1.62e+01  1.03e-01  1.45e+01  2.87e-05  2.37e-01  1.37e-01  
  4  +5.0048e-01  +1.4238e+00  9.23e-01  8.92e-03  1.30e+00  7.35e-06  1.52e-01  7.00e-01  
  5  +5.0012e-01  +7.8666e-01  2.87e-01  2.74e-03  4.03e-01  3.18e-06  7.11e-02  5.80e-01  
  6  +5.0008e-01  +7.4720e-01  2.47e-01  2.35e-03  3.46e-01  3.55e-06  3.81e-02  6.24e-01  
  7  +4.9975e-01  +7.2679e-01  2.27e-01  1.37e-03  2.03e-01  1.25e-05  5.99e-03  9.90e-01  
  8  +4.9795e-01  +7.0128e-01  2.03e-01  3.31e-04  4.94e-02  5.42e-05  1.12e-03  8.17e-01  
  9  +4.9627e-01  +6.3620e-01  1.40e-01  1.42e-04  2.12e-02  3.59e-05  4.62e-04  9.12e-01  
 10  +4.9643e-01  +6.3662e-01  1.40e-01  1.39e-04  2.08e-02  3.31e-05  4.49e-04  1.36e-01  
 11  +4.9537e-01  +6.3112e-01  1.36e-01  1.07e-04  1.59e-02  3.56e-05  3.41e-04  3.45e-01  
 12  +4.9458e-01  +6.2549e-01  1.31e-01  1.05e-04  1.56e-02  3.02e-05  3.38e-04  1.04e-01  
 13  +4.9058e-01  +6.0513e-01  1.15e-01  6.96e-05  1.04e-02  3.05e-05  2.26e-04  4.09e-01  
 14  +4.8263e-01  +5.6455e-01  8.19e-02  4.18e-05  6.22e-03  1.57e-05  1.40e-04  6.07e-01  
 15  +4.7589e-01  +5.3356e-01  5.77e-02  2.71e-05  4.03e-03  8.45e-06  9.39e-05  5.17e-01  
 16  +4.7417e-01  +5.2622e-01  5.21e-02  2.37e-05  3.52e-03  7.11e-06  8.26e-05  2.58e-01  
 17  +4.7027e-01  +5.0946e-01  3.92e-02  1.69e-05  2.52e-03  4.60e-06  6.02e-05  5.41e-01  
 18  +4.6403e-01  +4.8367e-01  1.96e-02  8.02e-06  1.19e-03  2.18e-06  2.94e-05  5.92e-01  
 19  +4.6078e-01  +4.7059e-01  9.81e-03  3.82e-06  5.68e-04  1.11e-06  1.42e-05  6.27e-01  
 20  +4.6056e-01  +4.6978e-01  9.22e-03  3.54e-06  5.26e-04  1.05e-06  1.32e-05  1.31e-01  
 21  +4.5913e-01  +4.6412e-01  5.00e-03  1.90e-06  2.82e-04  5.53e-07  7.12e-06  9.90e-01  
 22  +4.5745e-01  +4.5809e-01  6.40e-04  2.40e-07  3.57e-05  6.96e-08  9.20e-07  9.30e-01  
 23  +4.5720e-01  +4.5721e-01  7.38e-06  2.77e-09  4.11e-07  7.94e-10  1.06e-08  9.89e-01  
 24  +4.5720e-01  +4.5720e-01  7.40e-08  2.77e-11  4.12e-09  7.96e-12  1.06e-10  9.90e-01  
 25  +4.5720e-01  +4.5720e-01  7.40e-10  2.77e-13  4.12e-11  8.02e-14  1.07e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 46.1188ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Problem status: optimal
(CVXPY) Aug 30 12:09:36 PM: Optimal value: 4.572e-01
(CVXPY) Aug 30 12:09:36 PM: Compilation took 1.563e-02 seconds
(CVXPY) Aug 30 12:09:36 PM: Solver (including time spent in interface) took 4.687e-02 seconds
Iteration: 8, Objective: 0.4572
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 30 12:09:36 PM: Your problem has 2563 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 30 12:09:36 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 30 12:09:36 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 30 12:09:36 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 30 12:09:36 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 30 12:09:36 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 30 12:09:36 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 30 12:09:36 PM: Applying reduction CLARABEL
(CVXPY) Aug 30 12:09:36 PM: Finished problem compilation (took 0.000e+00 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2563
  constraints   = 5063
  nnz(P)        = 0
  nnz(A)        = 32757
  cones (total) = 1
    : Nonnegative = 1,  numel = 5063

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0008e-01  +2.5014e+03  2.50e+03  9.79e-01  7.35e+01  1.00e+00  1.00e+00   ------   
  1  +5.9267e-01  +5.1527e+02  5.15e+02  3.85e-01  4.43e+01  3.91e-03  5.27e-01  6.26e-01  
  2  +5.4129e-01  +6.7754e+01  6.72e+01  1.46e-01  2.11e+01  1.16e-02  2.44e-01  8.31e-01  
  3  +5.0989e-01  +1.6695e+01  1.62e+01  1.03e-01  1.45e+01  2.87e-05  2.37e-01  1.37e-01  
  4  +5.0049e-01  +1.4278e+00  9.27e-01  8.96e-03  1.31e+00  7.36e-06  1.52e-01  6.98e-01  
  5  +5.0012e-01  +7.8625e-01  2.86e-01  2.74e-03  4.03e-01  3.17e-06  7.10e-02  5.81e-01  
  6  +5.0006e-01  +7.3300e-01  2.33e-01  2.20e-03  3.25e-01  3.63e-06  3.28e-02  7.14e-01  
  7  +4.9950e-01  +7.1985e-01  2.20e-01  9.95e-04  1.48e-01  1.92e-05  3.85e-03  9.89e-01  
  8  +4.9608e-01  +6.5741e-01  1.61e-01  1.57e-04  2.34e-02  8.83e-05  5.17e-04  9.06e-01  
  9  +4.9656e-01  +6.6057e-01  1.64e-01  1.56e-04  2.32e-02  8.41e-05  5.07e-04  1.05e-01  
 10  +4.9558e-01  +6.5339e-01  1.58e-01  1.26e-04  1.87e-02  8.84e-05  4.03e-04  2.67e-01  
 11  +4.9518e-01  +6.4255e-01  1.47e-01  1.04e-04  1.56e-02  6.22e-05  3.32e-04  4.48e-01  
 12  +4.9394e-01  +6.2918e-01  1.35e-01  9.98e-05  1.49e-02  4.08e-05  3.22e-04  2.37e-01  
 13  +4.8611e-01  +5.8572e-01  9.96e-02  5.02e-05  7.49e-03  3.43e-05  1.65e-04  6.15e-01  
 14  +4.7755e-01  +5.4348e-01  6.59e-02  3.08e-05  4.59e-03  1.77e-05  1.05e-04  4.62e-01  
 15  +4.7687e-01  +5.4012e-01  6.32e-02  2.90e-05  4.31e-03  1.55e-05  9.94e-05  1.78e-01  
 16  +4.7492e-01  +5.3044e-01  5.55e-02  2.47e-05  3.68e-03  9.54e-06  8.55e-05  4.95e-01  
 17  +4.6847e-01  +5.0296e-01  3.45e-02  1.44e-05  2.14e-03  5.16e-06  5.14e-05  5.32e-01  
 18  +4.6420e-01  +4.8531e-01  2.11e-02  8.50e-06  1.26e-03  2.94e-06  3.12e-05  4.95e-01  
 19  +4.6216e-01  +4.7649e-01  1.43e-02  5.57e-06  8.28e-04  1.77e-06  2.06e-05  7.46e-01  
 20  +4.6124e-01  +4.7299e-01  1.18e-02  4.53e-06  6.74e-04  1.45e-06  1.69e-05  2.06e-01  
 21  +4.5929e-01  +4.6529e-01  6.00e-03  2.29e-06  3.41e-04  6.83e-07  8.67e-06  9.90e-01  
 22  +4.5727e-01  +4.5796e-01  6.98e-04  2.65e-07  3.94e-05  7.60e-08  1.03e-06  9.25e-01  
 23  +4.5700e-01  +4.5701e-01  8.64e-06  3.28e-09  4.87e-07  9.32e-10  1.28e-08  9.88e-01  
 24  +4.5700e-01  +4.5700e-01  8.64e-08  3.28e-11  4.87e-09  9.32e-12  1.28e-10  9.90e-01  
 25  +4.5700e-01  +4.5700e-01  8.64e-10  3.28e-13  4.87e-11  9.37e-14  1.28e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 47.431ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 30 12:09:36 PM: Problem status: optimal
(CVXPY) Aug 30 12:09:36 PM: Optimal value: 4.570e-01
(CVXPY) Aug 30 12:09:36 PM: Compilation took 0.000e+00 seconds
(CVXPY) Aug 30 12:09:36 PM: Solver (including time spent in interface) took 6.256e-02 seconds
FULL MODEL:
  Accruacy: 0.5328
  Our objective: 0.06560000000000005

IF 
    (x1 = 1 AND x0 = 0 AND x3 = 0 AND x4 = 0)                       <-- (term's our objective: 0.017599999999999977)
 OR (x0 = 0 AND x1 = 0 AND x3 = 0 AND x4 = 0 AND x5 = 0)            <-- (term's our objective: 0.02920000000000004)
 OR (x1 = 1 AND x3 = 1 AND x5 = 1 AND x2 = 0 AND x4 = 0)            <-- (term's our objective: 0.0072000000000000085)
 OR (x0 = 1 AND x1 = 1 AND x2 = 1 AND x3 = 1 AND x4 = 1 AND x5 = 1) <-- (term's our objective: 0.0027999999999999726)
 OR (x1 = 1 AND x2 = 1 AND x4 = 1 AND x5 = 1 AND x0 = 0 AND x3 = 0) <-- (term's our objective: 0.002799999999999952)
 OR (x1 = 1 AND x2 = 1 AND x3 = 1 AND x0 = 0 AND x4 = 0 AND x5 = 0) <-- (term's our objective: 0.0015999999999999678)
 OR (x0 = 1 AND x1 = 1 AND x2 = 1 AND x5 = 1 AND x3 = 0 AND x4 = 0) <-- (term's our objective: 0.0016000000000000146)
 OR (x0 = 1 AND x1 = 1 AND x2 = 1 AND x4 = 1 AND x3 = 0 AND x5 = 0) <-- (term's our objective: 0.0028000000000000143)
THEN
 target = 1.0 ELSE target = 0.0

Best over terms:
  Our final objective: 0.02920000000000004
    Its accruacy: 0.5146
    Its hamming distance: 1
  Shortest hamming distance: 1
    Its our objective: 0.02920000000000004
  Highest accruacy: 0.5146
  static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step      
Errors:
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 1 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 2 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 3 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 4 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 5 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 6 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 7 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 8 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 9 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 10 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 11 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 12 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 13 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 14 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 15 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 16 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 17 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 18 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 19 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 20 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 21 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 22 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 23 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 24 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 25 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 26 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 27 times so far.

  warnings.warn(msg, UserWarning)
C:\personal\work\DNF_bias\src\aix360\aix360\algorithms\rbm\beam_search.py:58: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  zOut = pd.Series(index=X.columns)

