Command:
python test_script.py -s smallest_subclass -d 6 -n 50 --seed 34 -m ripper --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.018750000000000003
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.08
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 50 remain. 
Dimension is 6.

Computed total variation: 0.6799999999999999
Importing dev version v0.982 of RIPPER
RIPPER:
FULL MODEL:
  Accruacy: 0.8
  Our objective: 0.6

IF 
    (x5 = 1 AND x0 = 0)                       <-- (term's our objective: 0.07999999999999999)
 OR (x4 = 0 AND x0 = 0 AND x3 = 0)            <-- (term's our objective: 0.28)
 OR (x5 = 1 AND x2 = 0 AND x1 = 1)            <-- (term's our objective: 0.11999999999999995)
 OR (x0 = 1 AND x3 = 1 AND x2 = 0)            <-- (term's our objective: 0.08000000000000003)
 OR (x2 = 1 AND x3 = 0 AND x0 = 0 AND x1 = 1) <-- (term's our objective: 0.12)
 OR (x5 = 1 AND x1 = 0 AND x2 = 1)            <-- (term's our objective: 0.08000000000000003)
 OR (x0 = 1 AND x2 = 1 AND x3 = 0 AND x1 = 0) <-- (term's our objective: 0.03999999999999996)
 OR (x5 = 1 AND x4 = 1 AND x3 = 0)            <-- (term's our objective: 2.7755575615628914e-17)
 OR (x3 = 1 AND x0 = 1 AND x1 = 1 AND x4 = 0) <-- (term's our objective: 0.039999999999999994)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 3.3680691719055176
Best over terms:
  Our final objective: 0.28
    Its accruacy: 0.64
    Its hamming distance: 3
  Shortest hamming distance: 3
    Its our objective: 0.28
  Highest accruacy: 0.64

Errors:

