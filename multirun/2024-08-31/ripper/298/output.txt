Command:
python test_script.py -s smallest_subclass -d 8 -n 500 --seed 34 -m ripper --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.004687500000000001
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.016
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 500 remain. 
Dimension is 8.

Computed total variation: 0.532
Importing dev version v0.982 of RIPPER
RIPPER:
FULL MODEL:
  Accruacy: 0.552
  Our objective: 0.10399999999999998

IF 
    (x4 = 0 AND x5 = 1 AND x3 = 0)            <-- (term's our objective: 0.048000000000000015)
 OR (x7 = 0)                                  <-- (term's our objective: 0.11600000000000005)
 OR (x6 = 0 AND x5 = 1)                       <-- (term's our objective: 0.02400000000000002)
 OR (x6 = 0 AND x2 = 1 AND x3 = 0)            <-- (term's our objective: 0.02800000000000001)
 OR (x1 = 1 AND x3 = 1 AND x4 = 0)            <-- (term's our objective: 0.008000000000000035)
 OR (x2 = 0)                                  <-- (term's our objective: 0.02400000000000002)
 OR (x1 = 1 AND x5 = 1 AND x0 = 0 AND x3 = 1) <-- (term's our objective: -0.027999999999999955)
 OR (x0 = 1 AND x3 = 0 AND x1 = 1)            <-- (term's our objective: 0.04800000000000003)
 OR (x0 = 1 AND x5 = 0 AND x6 = 1 AND x1 = 0) <-- (term's our objective: 0.008000000000000049)
 OR (x6 = 0 AND x1 = 1)                       <-- (term's our objective: 0.01200000000000001)
 OR (x3 = 0 AND x1 = 0 AND x0 = 0 AND x5 = 1) <-- (term's our objective: 0.007999999999999965)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 3.3366847038269043
Best over terms:
  Our final objective: 0.11600000000000005
    Its accruacy: 0.558
    Its hamming distance: 7
  Shortest hamming distance: 6
    Its our objective: 0.007999999999999965
  Highest accruacy: 0.558

Errors:

