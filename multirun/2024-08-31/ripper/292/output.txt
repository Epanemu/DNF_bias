Command:
python test_script.py -s smallest_subclass -d 8 -n 100 --seed 73 -m ripper --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.004687500000000001
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.0
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 100 remain. 
Dimension is 8.

Computed total variation: 0.78
Importing dev version v0.982 of RIPPER
RIPPER:
FULL MODEL:
  Accruacy: 0.8
  Our objective: 0.6000000000000001

IF 
    (x2 = 0 AND x3 = 1 AND x0 = 0)                       <-- (term's our objective: 0.12000000000000002)
 OR (x7 = 0 AND x5 = 1 AND x0 = 0)                       <-- (term's our objective: 0.08000000000000002)
 OR (x1 = 0 AND x5 = 0 AND x0 = 1 AND x4 = 1)            <-- (term's our objective: 0.12000000000000002)
 OR (x6 = 0 AND x0 = 0 AND x3 = 1)                       <-- (term's our objective: 0.14000000000000004)
 OR (x0 = 1 AND x4 = 0 AND x2 = 0 AND x1 = 1)            <-- (term's our objective: 0.06000000000000005)
 OR (x7 = 0 AND x1 = 1 AND x3 = 1 AND x5 = 0)            <-- (term's our objective: 0.06000000000000005)
 OR (x2 = 0 AND x4 = 1 AND x0 = 0)                       <-- (term's our objective: 0.14000000000000004)
 OR (x5 = 0 AND x0 = 1 AND x3 = 0 AND x1 = 0)            <-- (term's our objective: -2.7755575615628914e-17)
 OR (x7 = 0 AND x3 = 0 AND x2 = 1 AND x4 = 0 AND x6 = 0) <-- (term's our objective: 0.040000000000000036)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 3.480760097503662
Best over terms:
  Our final objective: 0.14000000000000004
    Its accruacy: 0.57
    Its hamming distance: 7
  Shortest hamming distance: 5
    Its our objective: 0.040000000000000036
  Highest accruacy: 0.57

Errors:

