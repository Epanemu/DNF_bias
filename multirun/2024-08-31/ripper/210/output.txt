Command:
python test_script.py -s smallest_subclass -d 6 -n 100 --seed 43 -m ripper --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.018750000000000003
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.0
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 100 remain. 
Dimension is 6.

Computed total variation: 0.6000000000000001
Importing dev version v0.982 of RIPPER
RIPPER:
FULL MODEL:
  Accruacy: 0.64
  Our objective: 0.28

IF 
    (x0 = 0 AND x4 = 0)            <-- (term's our objective: 5.551115123125783e-17)
 OR (x4 = 1 AND x5 = 0 AND x0 = 1) <-- (term's our objective: 0.16)
 OR (x1 = 1)                       <-- (term's our objective: 0.06000000000000005)
 OR (x0 = 0 AND x2 = 1)            <-- (term's our objective: 0.020000000000000018)
 OR (x3 = 0 AND x4 = 0 AND x2 = 1) <-- (term's our objective: 0.08000000000000004)
 OR (x0 = 0 AND x3 = 1 AND x5 = 0) <-- (term's our objective: 0.06000000000000005)
 OR (x3 = 0 AND x5 = 1 AND x2 = 0) <-- (term's our objective: 0.039999999999999994)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 3.3260176181793213
Best over terms:
  Our final objective: 0.16
    Its accruacy: 0.58
    Its hamming distance: 7
  Shortest hamming distance: 4
    Its our objective: 5.551115123125783e-17
  Highest accruacy: 0.58

Errors:

