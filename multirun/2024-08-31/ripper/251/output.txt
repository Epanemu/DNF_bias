Command:
python test_script.py -s smallest_subclass -d 7 -n 100 --seed 56 -m ripper --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.009375000000000001
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = -0.02
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 100 remain. 
Dimension is 7.

Computed total variation: 0.7
Importing dev version v0.982 of RIPPER
RIPPER:
FULL MODEL:
  Accruacy: 0.68
  Our objective: 0.36

IF 
    (x0 = 1)                                  <-- (term's our objective: 0.020000000000000018)
 OR (x4 = 0 AND x5 = 0 AND x6 = 1)            <-- (term's our objective: 0.06000000000000001)
 OR (x4 = 0 AND x5 = 1 AND x1 = 0 AND x2 = 0) <-- (term's our objective: 0.03999999999999998)
 OR (x1 = 1 AND x5 = 0 AND x3 = 1)            <-- (term's our objective: 0.060000000000000026)
 OR (x2 = 1 AND x1 = 0 AND x3 = 0)            <-- (term's our objective: 0.01999999999999999)
 OR (x4 = 0 AND x6 = 0 AND x1 = 1 AND x5 = 1) <-- (term's our objective: 0.059999999999999956)
 OR (x1 = 0 AND x5 = 1 AND x6 = 1)            <-- (term's our objective: 0.08000000000000004)
 OR (x4 = 0 AND x5 = 0 AND x1 = 1 AND x2 = 0) <-- (term's our objective: 0.05999999999999998)
 OR (x4 = 0 AND x1 = 0 AND x2 = 1 AND x5 = 0) <-- (term's our objective: 5.551115123125783e-17)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 3.4747064113616943
Best over terms:
  Our final objective: 0.08000000000000004
    Its accruacy: 0.54
    Its hamming distance: 8
  Shortest hamming distance: 5
    Its our objective: 0.03999999999999998
  Highest accruacy: 0.54

Errors:

