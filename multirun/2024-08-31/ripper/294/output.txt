Command:
python test_script.py -s smallest_subclass -d 8 -n 100 --seed 21 -m ripper --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.004687500000000001
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.0
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 100 remain. 
Dimension is 8.

Computed total variation: 0.78
Importing dev version v0.982 of RIPPER
RIPPER:
FULL MODEL:
  Accruacy: 0.71
  Our objective: 0.42000000000000004

IF 
    (x1 = 1)                                             <-- (term's our objective: 0.09999999999999998)
 OR (x6 = 0 AND x2 = 0 AND x3 = 1)                       <-- (term's our objective: 0.020000000000000018)
 OR (x6 = 0 AND x5 = 0 AND x2 = 1)                       <-- (term's our objective: 0.12000000000000005)
 OR (x3 = 0 AND x0 = 0 AND x2 = 0 AND x5 = 1)            <-- (term's our objective: 0.1)
 OR (x3 = 0 AND x7 = 1 AND x2 = 0 AND x5 = 0 AND x6 = 1) <-- (term's our objective: 0.020000000000000052)
 OR (x2 = 1 AND x5 = 1 AND x4 = 0 AND x6 = 1)            <-- (term's our objective: 0.020000000000000052)
 OR (x0 = 0 AND x6 = 0 AND x2 = 1 AND x4 = 1)            <-- (term's our objective: 0.03999999999999996)
 OR (x0 = 0 AND x7 = 0 AND x6 = 0 AND x3 = 1)            <-- (term's our objective: -0.059999999999999984)
 OR (x4 = 1 AND x7 = 0 AND x5 = 0 AND x0 = 0)            <-- (term's our objective: 0.059999999999999956)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 3.571533679962158
Best over terms:
  Our final objective: 0.12000000000000005
    Its accruacy: 0.56
    Its hamming distance: 7
  Shortest hamming distance: 6
    Its our objective: 0.1
  Highest accruacy: 0.56

Errors:

