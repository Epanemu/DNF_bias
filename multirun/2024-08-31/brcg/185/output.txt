Command:
python test_script.py -s smallest_subclass -d 5 -n 5000 --seed 43 -m brcg --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.037500000000000006
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.0344
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 5000 remain. 
Dimension is 5.

Computed total variation: 0.0716
BRCG
Learning DNF rule with complexity parameters lambda0=0.0001, lambda1=0
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 31 04:48:30 PM: Your problem has 2511 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 31 04:48:30 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 31 04:48:30 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 31 04:48:30 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 31 04:48:30 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 31 04:48:30 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 31 04:48:30 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Finished problem compilation (took 8.693e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2511
  constraints   = 5011
  nnz(P)        = 0
  nnz(A)        = 20011
  cones (total) = 1
    : Nonnegative = 1,  numel = 5011

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0009e-01  +2.5007e+03  2.50e+03  9.78e-01  6.52e+01  1.00e+00  1.00e+00   ------   
  1  +5.9956e-01  +5.0122e+02  5.01e+02  3.62e-01  3.80e+01  3.99e-03  5.02e-01  6.45e-01  
  2  +5.4614e-01  +7.1645e+01  7.11e+01  1.41e-01  1.85e+01  9.85e-03  2.35e-01  7.79e-01  
  3  +5.1039e-01  +1.6765e+01  1.63e+01  1.01e-01  1.29e+01  2.29e-05  2.31e-01  9.64e-02  
  4  +5.0009e-01  +9.3037e-01  4.30e-01  4.11e-03  5.37e-01  6.29e-06  1.26e-01  9.90e-01  
  5  +5.0001e-01  +5.5418e-01  5.42e-02  5.14e-04  6.75e-02  7.37e-07  1.95e-02  8.51e-01  
  6  +4.9998e-01  +5.6365e-01  6.37e-02  5.94e-04  7.80e-02  1.70e-06  8.18e-03  6.58e-01  
  7  +4.9805e-01  +5.5846e-01  6.04e-02  6.64e-05  8.78e-03  4.91e-05  2.23e-04  9.80e-01  
  8  +4.9332e-01  +5.3073e-01  3.74e-02  1.80e-05  2.38e-03  7.84e-05  6.09e-05  7.44e-01  
  9  +4.8762e-01  +5.0088e-01  1.33e-02  5.75e-06  7.60e-04  1.04e-05  2.17e-05  7.57e-01  
 10  +4.8439e-01  +4.8705e-01  2.66e-03  1.08e-06  1.43e-04  1.14e-06  4.37e-06  8.68e-01  
 11  +4.8353e-01  +4.8361e-01  7.92e-05  3.18e-08  4.21e-06  1.46e-08  1.31e-07  9.90e-01  
 12  +4.8350e-01  +4.8350e-01  7.92e-07  3.18e-10  4.20e-08  1.46e-10  1.31e-09  9.90e-01  
 13  +4.8350e-01  +4.8350e-01  7.92e-09  3.18e-12  4.20e-10  1.46e-12  1.32e-11  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 22.4584ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Problem status: optimal
(CVXPY) Aug 31 04:48:30 PM: Optimal value: 4.835e-01
(CVXPY) Aug 31 04:48:30 PM: Compilation took 8.693e-03 seconds
(CVXPY) Aug 31 04:48:30 PM: Solver (including time spent in interface) took 2.623e-02 seconds
Initial LP solved
Iteration: 1, Objective: 0.4835
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 31 04:48:30 PM: Your problem has 2521 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 31 04:48:30 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 31 04:48:30 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 31 04:48:30 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 31 04:48:30 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 31 04:48:30 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 31 04:48:30 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Finished problem compilation (took 7.890e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2521
  constraints   = 5021
  nnz(P)        = 0
  nnz(A)        = 22912
  cones (total) = 1
    : Nonnegative = 1,  numel = 5021

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0007e-01  +2.5016e+03  2.50e+03  9.78e-01  6.67e+01  1.00e+00  1.00e+00   ------   
  1  +5.9940e-01  +5.0149e+02  5.01e+02  3.62e-01  3.89e+01  3.99e-03  5.03e-01  6.45e-01  
  2  +5.4594e-01  +7.1452e+01  7.09e+01  1.41e-01  1.88e+01  9.88e-03  2.35e-01  7.81e-01  
  3  +5.1030e-01  +1.6674e+01  1.62e+01  1.01e-01  1.31e+01  2.29e-05  2.31e-01  9.88e-02  
  4  +5.0061e-01  +1.7488e+00  1.25e+00  1.19e-02  1.57e+00  7.35e-06  1.79e-01  4.78e-01  
  5  +5.0012e-01  +7.9707e-01  2.97e-01  2.82e-03  3.77e-01  2.26e-06  7.97e-02  6.24e-01  
  6  +5.0003e-01  +6.2444e-01  1.24e-01  1.18e-03  1.58e-01  1.35e-06  2.73e-02  7.58e-01  
  7  +4.9812e-01  +1.4134e+00  9.15e-01  1.24e-03  1.68e-01  5.04e-05  4.46e-03  9.62e-01  
  8  +4.9403e-01  +9.0533e-01  4.11e-01  2.81e-04  3.79e-02  5.31e-05  1.01e-03  7.87e-01  
  9  +4.9180e-01  +6.2412e-01  1.32e-01  8.76e-05  1.18e-02  6.90e-06  3.23e-04  8.49e-01  
 10  +4.9125e-01  +5.8790e-01  9.67e-02  6.50e-05  8.78e-03  4.70e-06  2.42e-04  5.75e-01  
 11  +4.9139e-01  +5.6981e-01  7.84e-02  5.56e-05  7.51e-03  3.64e-06  2.14e-04  6.22e-01  
 12  +4.9095e-01  +5.6616e-01  7.52e-02  4.88e-05  6.60e-03  3.79e-06  1.83e-04  2.81e-01  
 13  +4.8897e-01  +5.4624e-01  5.73e-02  4.18e-05  5.65e-03  2.36e-06  1.71e-04  5.12e-01  
 14  +4.8384e-01  +5.1158e-01  2.77e-02  1.76e-05  2.38e-03  1.09e-06  7.68e-05  5.87e-01  
 15  +4.8125e-01  +4.9462e-01  1.34e-02  7.94e-06  1.07e-03  5.27e-07  3.62e-05  5.62e-01  
 16  +4.8120e-01  +4.9415e-01  1.29e-02  7.61e-06  1.03e-03  5.84e-07  3.47e-05  3.02e-01  
 17  +4.8067e-01  +4.9054e-01  9.87e-03  5.69e-06  7.68e-04  5.61e-07  2.59e-05  7.51e-01  
 18  +4.7927e-01  +4.8169e-01  2.43e-03  1.39e-06  1.87e-04  1.31e-07  6.68e-06  7.87e-01  
 19  +4.7883e-01  +4.7898e-01  1.50e-04  8.62e-08  1.16e-05  3.91e-09  4.55e-07  9.47e-01  
 20  +4.7880e-01  +4.7880e-01  2.00e-06  1.15e-09  1.56e-07  7.70e-11  6.92e-09  9.89e-01  
 21  +4.7880e-01  +4.7880e-01  1.99e-08  1.15e-11  1.55e-09  7.69e-13  6.92e-11  9.90e-01  
 22  +4.7880e-01  +4.7880e-01  1.99e-10  1.15e-13  1.55e-11  7.70e-15  6.94e-13  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 33.6516ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Problem status: optimal
(CVXPY) Aug 31 04:48:30 PM: Optimal value: 4.788e-01
(CVXPY) Aug 31 04:48:30 PM: Compilation took 7.890e-03 seconds
(CVXPY) Aug 31 04:48:30 PM: Solver (including time spent in interface) took 3.613e-02 seconds
Iteration: 2, Objective: 0.4788
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 31 04:48:30 PM: Your problem has 2531 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 31 04:48:30 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 31 04:48:30 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 31 04:48:30 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 31 04:48:30 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 31 04:48:30 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 31 04:48:30 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Finished problem compilation (took 8.769e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2531
  constraints   = 5031
  nnz(P)        = 0
  nnz(A)        = 26227
  cones (total) = 1
    : Nonnegative = 1,  numel = 5031

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0007e-01  +2.5013e+03  2.50e+03  9.79e-01  6.86e+01  1.00e+00  1.00e+00   ------   
  1  +5.9929e-01  +5.0173e+02  5.01e+02  3.63e-01  4.00e+01  3.99e-03  5.04e-01  6.45e-01  
  2  +5.4585e-01  +7.1374e+01  7.08e+01  1.41e-01  1.93e+01  9.92e-03  2.35e-01  7.82e-01  
  3  +5.1027e-01  +1.6642e+01  1.61e+01  1.01e-01  1.34e+01  2.30e-05  2.31e-01  1.00e-01  
  4  +5.0051e-01  +1.5989e+00  1.10e+00  1.05e-02  1.43e+00  7.23e-06  1.73e-01  5.35e-01  
  5  +5.0009e-01  +7.3040e-01  2.30e-01  2.19e-03  3.01e-01  1.97e-06  6.43e-02  7.07e-01  
  6  +5.0007e-01  +7.1903e-01  2.19e-01  2.08e-03  2.86e-01  2.18e-06  4.49e-02  4.06e-01  
  7  +4.9992e-01  +6.8376e-01  1.84e-01  1.57e-03  2.16e-01  4.55e-06  1.18e-02  8.38e-01  
  8  +4.9572e-01  +6.4887e-01  1.53e-01  1.31e-04  1.82e-02  8.33e-05  4.65e-04  9.65e-01  
  9  +4.8981e-01  +5.7856e-01  8.87e-02  6.42e-05  8.92e-03  3.69e-05  2.37e-04  5.92e-01  
 10  +4.9022e-01  +5.8127e-01  9.10e-02  6.46e-05  8.97e-03  3.63e-05  2.36e-04  7.16e-02  
 11  +4.8735e-01  +5.4475e-01  5.74e-02  3.80e-05  5.27e-03  3.93e-07  1.38e-04  9.62e-01  
 12  +4.8731e-01  +5.4419e-01  5.69e-02  3.45e-05  4.79e-03  1.38e-06  1.20e-04  3.72e-01  
 13  +4.8635e-01  +5.3840e-01  5.20e-02  2.80e-05  3.88e-03  2.59e-06  9.41e-05  5.95e-01  
 14  +4.8596e-01  +5.3591e-01  5.00e-02  2.23e-05  3.10e-03  4.36e-06  7.27e-05  9.90e-01  
 15  +4.8431e-01  +5.2891e-01  4.46e-02  2.07e-05  2.88e-03  3.65e-06  6.86e-05  2.56e-01  
 16  +4.7890e-01  +5.0183e-01  2.29e-02  9.51e-06  1.32e-03  1.95e-06  3.21e-05  5.80e-01  
 17  +4.7433e-01  +4.7864e-01  4.31e-03  1.75e-06  2.42e-04  3.93e-07  6.09e-06  8.53e-01  
 18  +4.7428e-01  +4.7849e-01  4.21e-03  1.68e-06  2.33e-04  3.91e-07  5.84e-06  8.74e-02  
 19  +4.7401e-01  +4.7720e-01  3.19e-03  1.25e-06  1.73e-04  3.51e-07  4.48e-06  9.34e-01  
 20  +4.7322e-01  +4.7415e-01  9.26e-04  3.57e-07  4.96e-05  1.01e-07  1.31e-06  7.27e-01  
 21  +4.7296e-01  +4.7312e-01  1.59e-04  6.15e-08  8.53e-06  1.71e-08  2.30e-07  8.32e-01  
 22  +4.7291e-01  +4.7293e-01  2.10e-05  8.11e-09  1.13e-06  2.33e-09  3.05e-08  9.65e-01  
 23  +4.7290e-01  +4.7290e-01  2.21e-07  8.54e-11  1.19e-08  2.45e-11  3.21e-10  9.89e-01  
 24  +4.7290e-01  +4.7290e-01  2.22e-09  8.54e-13  1.19e-10  2.46e-13  3.23e-12  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 38.4005ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Problem status: optimal
(CVXPY) Aug 31 04:48:30 PM: Optimal value: 4.729e-01
(CVXPY) Aug 31 04:48:30 PM: Compilation took 8.769e-03 seconds
(CVXPY) Aug 31 04:48:30 PM: Solver (including time spent in interface) took 4.131e-02 seconds
Iteration: 3, Objective: 0.4729
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 31 04:48:30 PM: Your problem has 2534 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 31 04:48:30 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 31 04:48:30 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 31 04:48:30 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 31 04:48:30 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 31 04:48:30 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 31 04:48:30 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Finished problem compilation (took 8.996e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2534
  constraints   = 5034
  nnz(P)        = 0
  nnz(A)        = 27524
  cones (total) = 1
    : Nonnegative = 1,  numel = 5034

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0006e-01  +2.5012e+03  2.50e+03  9.79e-01  6.95e+01  1.00e+00  1.00e+00   ------   
  1  +5.9912e-01  +5.0241e+02  5.02e+02  3.64e-01  4.05e+01  3.99e-03  5.04e-01  6.44e-01  
  2  +5.4575e-01  +7.1330e+01  7.08e+01  1.42e-01  1.95e+01  9.98e-03  2.35e-01  7.84e-01  
  3  +5.1026e-01  +1.6646e+01  1.61e+01  1.01e-01  1.36e+01  2.32e-05  2.31e-01  1.01e-01  
  4  +5.0045e-01  +1.4995e+00  9.99e-01  9.58e-03  1.32e+00  7.15e-06  1.68e-01  5.80e-01  
  5  +5.0009e-01  +7.3937e-01  2.39e-01  2.28e-03  3.17e-01  2.10e-06  6.53e-02  6.78e-01  
  6  +5.0004e-01  +7.0451e-01  2.04e-01  1.93e-03  2.69e-01  2.50e-06  3.37e-02  6.03e-01  
  7  +4.9988e-01  +7.1280e-01  2.13e-01  1.73e-03  2.41e-01  5.98e-06  1.13e-02  7.36e-01  
  8  +4.9740e-01  +6.8463e-01  1.87e-01  2.70e-04  3.80e-02  5.30e-05  9.70e-04  9.25e-01  
  9  +4.9485e-01  +6.5191e-01  1.57e-01  1.51e-04  2.13e-02  6.17e-05  5.39e-04  5.00e-01  
 10  +4.9445e-01  +6.2510e-01  1.31e-01  1.16e-04  1.64e-02  2.37e-05  4.15e-04  6.26e-01  
 11  +4.9315e-01  +6.1309e-01  1.20e-01  9.74e-05  1.37e-02  2.01e-05  3.48e-04  2.80e-01  
 12  +4.8862e-01  +5.7787e-01  8.93e-02  5.93e-05  8.35e-03  1.26e-05  2.15e-04  5.74e-01  
 13  +4.8251e-01  +5.3871e-01  5.62e-02  3.06e-05  4.30e-03  7.40e-06  1.12e-04  6.02e-01  
 14  +4.8224e-01  +5.3704e-01  5.48e-02  3.05e-05  4.28e-03  7.01e-06  1.12e-04  6.06e-03  
 15  +4.7924e-01  +5.2189e-01  4.26e-02  2.34e-05  3.28e-03  4.03e-06  8.98e-05  4.29e-01  
 16  +4.7421e-01  +4.9608e-01  2.19e-02  1.03e-05  1.45e-03  2.19e-06  3.93e-05  7.31e-01  
 17  +4.7083e-01  +4.7851e-01  7.68e-03  3.37e-06  4.73e-04  8.62e-07  1.28e-05  7.23e-01  
 18  +4.7029e-01  +4.7625e-01  5.97e-03  2.79e-06  3.92e-04  4.86e-07  1.15e-05  2.67e-01  
 19  +4.6955e-01  +4.7418e-01  4.63e-03  1.89e-06  2.65e-04  4.45e-07  7.33e-06  5.25e-01  
 20  +4.6830e-01  +4.6858e-01  2.89e-04  1.17e-07  1.64e-05  2.33e-08  4.73e-07  9.43e-01  
 21  +4.6820e-01  +4.6821e-01  3.84e-06  1.55e-09  2.18e-07  2.60e-10  6.45e-09  9.88e-01  
 22  +4.6820e-01  +4.6820e-01  3.84e-08  1.55e-11  2.18e-09  2.60e-12  6.45e-11  9.90e-01  
 23  +4.6820e-01  +4.6820e-01  3.84e-10  1.55e-13  2.18e-11  2.62e-14  6.50e-13  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 42.3799ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Problem status: optimal
(CVXPY) Aug 31 04:48:30 PM: Optimal value: 4.682e-01
(CVXPY) Aug 31 04:48:30 PM: Compilation took 8.996e-03 seconds
(CVXPY) Aug 31 04:48:30 PM: Solver (including time spent in interface) took 4.569e-02 seconds
Iteration: 4, Objective: 0.4682
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 31 04:48:30 PM: Your problem has 2544 variables, 2500 constraints, and 0 parameters.
(CVXPY) Aug 31 04:48:30 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 31 04:48:30 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 31 04:48:30 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 31 04:48:30 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 31 04:48:30 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 31 04:48:30 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 31 04:48:30 PM: Applying reduction CLARABEL
(CVXPY) Aug 31 04:48:30 PM: Finished problem compilation (took 1.431e-02 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 2544
  constraints   = 5044
  nnz(P)        = 0
  nnz(A)        = 29198
  cones (total) = 1
    : Nonnegative = 1,  numel = 5044

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +5.0005e-01  +2.5010e+03  2.50e+03  9.79e-01  6.99e+01  1.00e+00  1.00e+00   ------   
  1  +5.9887e-01  +5.0315e+02  5.03e+02  3.65e-01  4.08e+01  3.99e-03  5.07e-01  6.43e-01  
  2  +5.4543e-01  +7.1050e+01  7.05e+01  1.42e-01  1.96e+01  1.01e-02  2.36e-01  7.87e-01  
  3  +5.1021e-01  +1.6607e+01  1.61e+01  1.01e-01  1.36e+01  2.34e-05  2.32e-01  1.04e-01  
  4  +5.0027e-01  +1.2195e+00  7.19e-01  6.92e-03  9.60e-01  6.89e-06  1.50e-01  7.44e-01  
  5  +5.0017e-01  +9.5945e-01  4.59e-01  4.41e-03  6.14e-01  4.60e-06  1.07e-01  3.28e-01  
  6  +5.0020e-01  +1.0079e+00  5.08e-01  4.86e-03  6.77e-01  4.77e-06  1.03e-01  2.74e-01  
  7  +5.0006e-01  +7.4068e-01  2.41e-01  2.29e-03  3.20e-01  3.11e-06  3.98e-02  8.08e-01  
  8  +4.9975e-01  +8.7565e-01  3.76e-01  2.33e-03  3.27e-01  1.28e-05  1.24e-02  8.09e-01  
  9  +4.9663e-01  +7.7679e-01  2.80e-01  3.46e-04  4.90e-02  6.71e-05  1.46e-03  8.84e-01  
 10  +4.9691e-01  +7.2541e-01  2.28e-01  3.08e-04  4.35e-02  2.67e-05  1.27e-03  4.44e-01  
 11  +4.9311e-01  +6.2971e-01  1.37e-01  1.47e-04  2.08e-02  1.42e-05  5.95e-04  6.72e-01  
 12  +4.9316e-01  +6.3098e-01  1.38e-01  1.45e-04  2.04e-02  1.38e-05  5.65e-04  1.43e-01  
 13  +4.9528e-01  +6.5972e-01  1.64e-01  1.32e-04  1.87e-02  1.30e-05  4.64e-04  6.94e-01  
 14  +4.9428e-01  +6.4470e-01  1.50e-01  1.22e-04  1.72e-02  1.01e-05  4.30e-04  2.94e-01  
 15  +4.9030e-01  +6.0971e-01  1.19e-01  7.59e-05  1.07e-02  9.32e-06  2.68e-04  4.28e-01  
 16  +4.8975e-01  +6.0146e-01  1.12e-01  7.30e-05  1.03e-02  7.90e-06  2.57e-04  2.13e-01  
 17  +4.8622e-01  +5.7645e-01  9.02e-02  5.16e-05  7.30e-03  6.67e-06  1.81e-04  3.82e-01  
 18  +4.8505e-01  +5.6697e-01  8.19e-02  4.47e-05  6.32e-03  5.99e-06  1.57e-04  3.35e-01  
 19  +4.8200e-01  +5.4270e-01  6.07e-02  3.18e-05  4.50e-03  4.08e-06  1.14e-04  7.90e-01  
 20  +4.8101e-01  +5.3764e-01  5.66e-02  2.89e-05  4.08e-03  3.86e-06  1.04e-04  1.97e-01  
 21  +4.7652e-01  +5.1463e-01  3.81e-02  1.81e-05  2.55e-03  2.70e-06  6.62e-05  7.15e-01  
 22  +4.7204e-01  +4.9377e-01  2.17e-02  9.35e-06  1.32e-03  1.63e-06  3.49e-05  5.53e-01  
 23  +4.7186e-01  +4.9283e-01  2.10e-02  9.26e-06  1.31e-03  1.53e-06  3.48e-05  3.22e-02  
 24  +4.7063e-01  +4.8795e-01  1.73e-02  7.21e-06  1.02e-03  1.36e-06  2.72e-05  3.56e-01  
 25  +4.6696e-01  +4.7219e-01  5.22e-03  2.09e-06  2.95e-04  4.61e-07  8.23e-06  8.71e-01  
 26  +4.6525e-01  +4.6539e-01  1.42e-04  5.62e-08  7.93e-06  1.14e-08  2.28e-07  9.81e-01  
 27  +4.6520e-01  +4.6520e-01  1.42e-06  5.62e-10  7.93e-08  1.14e-10  2.28e-09  9.90e-01  
 28  +4.6520e-01  +4.6520e-01  1.42e-08  5.62e-12  7.93e-10  1.14e-12  2.28e-11  9.90e-01  
 29  +4.6520e-01  +4.6520e-01  1.42e-10  5.62e-14  7.93e-12  1.15e-14  2.30e-13  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 51.2378ms
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:48:30 PM: Problem status: optimal
(CVXPY) Aug 31 04:48:30 PM: Optimal value: 4.652e-01
(CVXPY) Aug 31 04:48:30 PM: Compilation took 1.431e-02 seconds
(CVXPY) Aug 31 04:48:30 PM: Solver (including time spent in interface) took 5.477e-02 seconds
FULL MODEL:
  Accruacy: 0.5292
  Our objective: 0.05839999999999998

IF 
    (x0 = 1 AND x3 = 1 AND x4 = 1)                       <-- (term's our objective: 0.009199999999999972)
 OR (x0 = 0 AND x1 = 0 AND x2 = 0 AND x3 = 0 AND x4 = 0) <-- (term's our objective: 0.03440000000000004)
 OR (x1 = 1 AND x4 = 1 AND x0 = 0 AND x2 = 0 AND x3 = 0) <-- (term's our objective: 0.0076000000000000095)
 OR (x0 = 1 AND x1 = 1 AND x3 = 1 AND x2 = 0 AND x4 = 0) <-- (term's our objective: 0.0028000000000000073)
 OR (x1 = 1 AND x2 = 1 AND x0 = 0 AND x3 = 0 AND x4 = 0) <-- (term's our objective: 0.0027999999999999622)
 OR (x0 = 1 AND x1 = 1 AND x2 = 1 AND x3 = 1 AND x4 = 0) <-- (term's our objective: 0.0015999999999999834)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 2.6757328510284424
Best over terms:
  Our final objective: 0.03440000000000004
    Its accruacy: 0.5172
    Its hamming distance: 0
  Shortest hamming distance: 0
    Its our objective: 0.03440000000000004
  Highest accruacy: 0.5172
  static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step        static reg : on, ϵ1 = 1.0e-8, ϵ2 = 4.9e-32  dynamic reg: on, ϵ = 1.0e-13, δ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        μ       step      
Errors:
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 1 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 2 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 3 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 4 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 5 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 6 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 7 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 8 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 9 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 10 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 11 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 12 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 13 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 14 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 15 times so far.

  warnings.warn(msg, UserWarning)
C:\personal\work\DNF_bias\src\aix360\aix360\algorithms\rbm\beam_search.py:58: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  zOut = pd.Series(index=X.columns)

