Command:
python test_script.py -s smallest_subclass -d 4 -n 10 --seed 56 -m brcg --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.07500000000000001
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.0
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 10 remain. 
Dimension is 4.

Computed total variation: 0.8
BRCG
Learning DNF rule with complexity parameters lambda0=0.0001, lambda1=0
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 31 04:46:07 PM: Your problem has 14 variables, 5 constraints, and 0 parameters.
(CVXPY) Aug 31 04:46:07 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 31 04:46:07 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 31 04:46:07 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 31 04:46:07 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:46:07 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 31 04:46:07 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 31 04:46:07 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 31 04:46:07 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 31 04:46:07 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 31 04:46:07 PM: Applying reduction CLARABEL
(CVXPY) Aug 31 04:46:07 PM: Finished problem compilation (took 3.008e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:46:07 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 14
  constraints   = 19
  nnz(P)        = 0
  nnz(A)        = 44
  cones (total) = 1
    : Nonnegative = 1,  numel = 19

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.8281e-01  +6.0479e+00  5.57e+00  7.13e-01  2.31e+00  1.00e+00  1.29e+00   ------   
  1  +5.3976e-01  +1.3436e+00  8.04e-01  2.32e-01  9.91e-01  4.04e-03  5.59e-01  7.10e-01  
  2  +3.5762e-01  +5.1451e-01  1.57e-01  3.69e-02  1.78e-01  1.18e-02  1.39e-01  8.77e-01  
  3  +3.0415e-01  +3.1346e-01  9.31e-03  2.07e-03  1.01e-02  7.11e-04  9.00e-03  9.45e-01  
  4  +3.0034e-01  +3.0071e-01  3.64e-04  8.15e-05  3.99e-04  2.71e-05  3.58e-04  9.60e-01  
  5  +3.0024e-01  +3.0049e-01  2.46e-04  4.52e-05  2.28e-04  1.99e-05  2.19e-04  5.42e-01  
  6  +3.0011e-01  +3.0012e-01  1.31e-05  2.50e-06  1.25e-05  7.44e-07  1.25e-05  9.43e-01  
  7  +3.0010e-01  +3.0010e-01  1.34e-07  2.58e-08  1.29e-07  7.44e-09  1.31e-07  9.90e-01  
  8  +3.0010e-01  +3.0010e-01  1.34e-09  2.58e-10  1.29e-09  7.44e-11  1.31e-09  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 123µs
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:46:07 PM: Problem status: optimal
(CVXPY) Aug 31 04:46:07 PM: Optimal value: 3.001e-01
(CVXPY) Aug 31 04:46:07 PM: Compilation took 3.008e-03 seconds
(CVXPY) Aug 31 04:46:07 PM: Solver (including time spent in interface) took 0.000e+00 seconds
Initial LP solved
Iteration: 1, Objective: 0.3001
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 31 04:46:07 PM: Your problem has 15 variables, 5 constraints, and 0 parameters.
(CVXPY) Aug 31 04:46:07 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 31 04:46:07 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 31 04:46:07 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 31 04:46:07 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:46:07 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 31 04:46:07 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 31 04:46:07 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 31 04:46:07 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 31 04:46:07 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 31 04:46:07 PM: Applying reduction CLARABEL
(CVXPY) Aug 31 04:46:07 PM: Finished problem compilation (took 3.228e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:46:07 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 15
  constraints   = 20
  nnz(P)        = 0
  nnz(A)        = 47
  cones (total) = 1
    : Nonnegative = 1,  numel = 20

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.7049e-01  +6.0643e+00  5.59e+00  7.19e-01  2.34e+00  1.00e+00  1.29e+00   ------   
  1  +5.0667e-01  +1.3201e+00  8.13e-01  2.36e-01  1.00e+00  4.05e-03  5.60e-01  7.08e-01  
  2  +2.7960e-01  +4.8153e-01  2.02e-01  4.43e-02  2.09e-01  1.35e-02  1.64e-01  8.41e-01  
  3  +2.0872e-01  +2.3371e-01  2.50e-02  4.97e-03  2.39e-02  1.98e-03  2.33e-02  9.03e-01  
  4  +2.0032e-01  +2.0068e-01  3.53e-04  7.16e-05  3.44e-04  2.64e-05  3.47e-04  9.85e-01  
  5  +2.0020e-01  +2.0022e-01  1.05e-05  2.32e-06  1.10e-05  2.51e-07  1.15e-05  9.67e-01  
  6  +2.0020e-01  +2.0020e-01  1.14e-07  2.57e-08  1.21e-07  3.05e-09  1.29e-07  9.89e-01  
  7  +2.0020e-01  +2.0020e-01  1.14e-09  2.57e-10  1.21e-09  3.05e-11  1.29e-09  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 74.6µs
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:46:07 PM: Problem status: optimal
(CVXPY) Aug 31 04:46:07 PM: Optimal value: 2.002e-01
(CVXPY) Aug 31 04:46:07 PM: Compilation took 3.228e-03 seconds
(CVXPY) Aug 31 04:46:07 PM: Solver (including time spent in interface) took 0.000e+00 seconds
Iteration: 2, Objective: 0.2002
===============================================================================
                                     CVXPY                                     
                                     v1.5.2                                    
===============================================================================
(CVXPY) Aug 31 04:46:07 PM: Your problem has 18 variables, 5 constraints, and 0 parameters.
(CVXPY) Aug 31 04:46:07 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Aug 31 04:46:07 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Aug 31 04:46:07 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
(CVXPY) Aug 31 04:46:07 PM: Your problem is compiled with the CPP canonicalization backend.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:46:07 PM: Compiling problem (target solver=CLARABEL).
(CVXPY) Aug 31 04:46:07 PM: Reduction chain: Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> CLARABEL
(CVXPY) Aug 31 04:46:07 PM: Applying reduction Dcp2Cone
(CVXPY) Aug 31 04:46:07 PM: Applying reduction CvxAttr2Constr
(CVXPY) Aug 31 04:46:07 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Aug 31 04:46:07 PM: Applying reduction CLARABEL
(CVXPY) Aug 31 04:46:07 PM: Finished problem compilation (took 3.003e-03 seconds).
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:46:07 PM: Invoking solver CLARABEL  to obtain a solution.
-------------------------------------------------------------
           Clarabel.rs v0.9.0  -  Clever Acronym                

                   (c) Paul Goulart                          
                University of Oxford, 2022                   
-------------------------------------------------------------

problem:
  variables     = 18
  constraints   = 23
  nnz(P)        = 0
  nnz(A)        = 53
  cones (total) = 1
    : Nonnegative = 1,  numel = 23

settings:
  linear algebra: direct / qdldl, precision: 64 bit
  max iter = 200, time limit = Inf,  max step = 0.990
  tol_feas = 1.0e-8, tol_gap_abs = 1.0e-8, tol_gap_rel = 1.0e-8,


  iter refine: on, reltol = 1.0e-13, abstol = 1.0e-12,
               max iter = 10, stop ratio = 5.0
  equilibrate: on, min_scale = 1.0e-4, max_scale = 1.0e4
               max iter = 10


---------------------------------------------------------------------------------------------
  0  +4.5219e-01  +6.1188e+00  5.67e+00  7.35e-01  2.31e+00  1.00e+00  1.29e+00   ------   
  1  +4.2182e-01  +1.2646e+00  8.43e-01  2.40e-01  9.60e-01  4.21e-03  5.52e-01  7.01e-01  
  2  +1.3102e-01  +3.7479e-01  2.44e-01  5.14e-02  2.23e-01  1.53e-02  1.73e-01  8.25e-01  
  3  +1.0297e-01  +1.1611e-01  1.31e-02  2.77e-03  1.22e-02  1.46e-03  1.06e-02  9.45e-01  
  4  +1.0036e-01  +1.0056e-01  1.96e-04  4.33e-05  1.91e-04  1.56e-05  1.68e-04  9.84e-01  
  5  +1.0030e-01  +1.0031e-01  7.22e-06  1.94e-06  8.16e-06  1.61e-07  7.97e-06  9.56e-01  
  6  +1.0030e-01  +1.0030e-01  7.47e-08  2.03e-08  8.52e-08  1.76e-09  8.42e-08  9.90e-01  
  7  +1.0030e-01  +1.0030e-01  7.47e-10  2.04e-10  8.53e-10  1.76e-11  8.43e-10  9.90e-01  
---------------------------------------------------------------------------------------------
Terminated with status = Solved
solve time = 88.8µs
-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Aug 31 04:46:07 PM: Problem status: optimal
(CVXPY) Aug 31 04:46:07 PM: Optimal value: 1.003e-01
(CVXPY) Aug 31 04:46:07 PM: Compilation took 3.003e-03 seconds
(CVXPY) Aug 31 04:46:07 PM: Solver (including time spent in interface) took 0.000e+00 seconds
FULL MODEL:
  Accruacy: 0.9
  Our objective: 0.8

IF 
    (x1 = 0)                       <-- (term's our objective: 0.4)
 OR (x0 = 1 AND x2 = 1 AND x3 = 1) <-- (term's our objective: 0.19999999999999996)
 OR (x3 = 1 AND x0 = 0 AND x2 = 0) <-- (term's our objective: 0.19999999999999996)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 1.148350477218628
Best over terms:
  Our final objective: 0.4
    Its accruacy: 0.7
    Its hamming distance: 3
  Shortest hamming distance: 3
    Its our objective: 0.4
  Highest accruacy: 0.7
  static reg : on, Ïµ1 = 1.0e-8, Ïµ2 = 4.9e-32  dynamic reg: on, Ïµ = 1.0e-13, Î´ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        Î¼       step        static reg : on, Ïµ1 = 1.0e-8, Ïµ2 = 4.9e-32  dynamic reg: on, Ïµ = 1.0e-13, Î´ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        Î¼       step        static reg : on, Ïµ1 = 1.0e-8, Ïµ2 = 4.9e-32  dynamic reg: on, Ïµ = 1.0e-13, Î´ = 2.0e-7iter    pcost        dcost       gap       pres      dres      k/t        Î¼       step      
Errors:
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 1 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 2 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 3 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 4 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 5 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 6 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 7 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 8 times so far.

  warnings.warn(msg, UserWarning)
C:\Users\illia\AppData\Local\Programs\Python\Python310\lib\site-packages\cvxpy\expressions\expression.py:650: UserWarning: 
This use of ``*`` has resulted in matrix multiplication.
Using ``*`` for matrix multiplication has been deprecated since CVXPY 1.1.
    Use ``*`` for matrix-scalar and vector-scalar multiplication.
    Use ``@`` for matrix-matrix and matrix-vector multiplication.
    Use ``multiply`` for elementwise multiplication.
This code path has been hit 9 times so far.

  warnings.warn(msg, UserWarning)
C:\personal\work\DNF_bias\src\aix360\aix360\algorithms\rbm\beam_search.py:58: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.
  zOut = pd.Series(index=X.columns)

