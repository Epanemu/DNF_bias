Command:
python test_script.py -s smallest_subclass -d 6 -n 100 --seed 21 -m ripper --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.018750000000000003
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.02
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 100 remain. 
Dimension is 6.

Computed total variation: 0.52
Importing dev version v0.982 of RIPPER
RIPPER:
FULL MODEL:
  Accruacy: 0.73
  Our objective: 0.46

IF 
    (x2 = 0 AND x3 = 0 AND x1 = 1 AND x4 = 1 AND x0 = 0 AND x5 = 0) <-- (term's our objective: 0.06000000000000005)
 OR (x1 = 1 AND x0 = 1 AND x3 = 1)                                  <-- (term's our objective: 0.020000000000000018)
 OR (x1 = 1 AND x4 = 0 AND x3 = 0 AND x5 = 1)                       <-- (term's our objective: 0.059999999999999956)
 OR (x1 = 0 AND x3 = 1 AND x0 = 1 AND x5 = 1 AND x4 = 0)            <-- (term's our objective: 0.04000000000000005)
 OR (x5 = 0 AND x4 = 1 AND x1 = 0)                                  <-- (term's our objective: 0.08000000000000003)
 OR (x3 = 1 AND x0 = 0 AND x2 = 1 AND x5 = 1 AND x1 = 1)            <-- (term's our objective: 0.020000000000000052)
 OR (x2 = 0 AND x4 = 1 AND x1 = 0)                                  <-- (term's our objective: 0.06000000000000001)
 OR (x4 = 0 AND x0 = 0 AND x5 = 0 AND x1 = 0)                       <-- (term's our objective: 0.020000000000000035)
 OR (x4 = 0 AND x5 = 1 AND x2 = 1 AND x0 = 1)                       <-- (term's our objective: 0.03999999999999996)
 OR (x1 = 1 AND x5 = 0 AND x0 = 1)                                  <-- (term's our objective: 0.07999999999999996)
 OR (x4 = 0 AND x0 = 0 AND x5 = 0 AND x2 = 0)                       <-- (term's our objective: 0.03999999999999996)
 OR (x4 = 0 AND x5 = 1 AND x2 = 1 AND x3 = 1)                       <-- (term's our objective: -4.163336342344337e-17)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 3.585679769515991
Best over terms:
  Our final objective: 0.08000000000000003
    Its accruacy: 0.54
    Its hamming distance: 5
  Shortest hamming distance: 2
    Its our objective: 0.020000000000000035
  Highest accruacy: 0.54

Errors:

