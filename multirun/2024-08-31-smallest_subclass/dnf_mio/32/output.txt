Command:
python test_script.py -s smallest_subclass -d 1 -n 10000 --seed 73 -m dnf_mio --verbose
Output:
The true theoretical sup(\mu - \nu) = 0.6000000000000001
The correct rule on sampled data has \hat{\mu} - \hat{\nu} = 0.581
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 10000 remain. 
Dimension is 1.

Computed total variation: 0.581
DNF using MIO
Set parameter TimeLimit to value 120
Gurobi Optimizer version 11.0.3 build v11.0.3rc0 (win64 - Windows 11.0 (22631.2))

CPU model: Intel(R) Core(TM) i9-14900HX, instruction set [SSE2|AVX|AVX2]
Thread count: 24 physical cores, 32 logical processors, using up to 32 threads

Optimize a model with 80000 rows, 35010 columns and 155000 nonzeros
Model fingerprint: 0x987e2d8e
Variable types: 35000 continuous, 10 integer (10 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [2e-04, 2e-04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Found heuristic solution: objective 1.0000000
Presolve removed 79988 rows and 34996 columns
Presolve time: 0.13s
Presolved: 12 rows, 14 columns, 32 nonzeros
Variable types: 0 continuous, 14 integer (14 binary)
Found heuristic solution: objective 0.4190000

Explored 1 nodes (0 simplex iterations) in 0.14 seconds (0.34 work units)
Thread count was 32 (of 32 available processors)

Solution count 2: 0.419 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 4.190000000000e-01, best bound 4.190000000000e-01, gap 0.0000%
FULL MODEL:
  Accruacy: 0.7905
  Our objective: 0.581

IF 
    (x0 = 0) <-- (term's our objective: 0.581)
 OR (x0 = 0) <-- (term's our objective: 0.581)
 OR (x0 = 0) <-- (term's our objective: 0.581)
 OR (x0 = 0) <-- (term's our objective: 0.581)
 OR (x0 = 0) <-- (term's our objective: 0.581)
THEN
 target = 1.0 ELSE target = 0.0

Seconds needed: 3.4968039989471436
Best over terms:
  Our final objective: 0.581
    Its accruacy: 0.7905
    Its hamming distance: 0
  Shortest hamming distance: 0
    Its our objective: 0.581
  Highest accruacy: 0.7905

Errors:

