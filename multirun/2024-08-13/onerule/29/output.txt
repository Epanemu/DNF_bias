Command:
python test_script.py -s smallest_subclass -d 4 -n 5000 --seed 43 --onerule
Output:
The true sup(\mu - \nu) = 0.07500000000000001
The correct rule has \hat{\mu} - \hat{\nu} = 0.0592
TRIVIAL ACCURACY - always TRUE: 0.5
Balancing dropped 0 samples, 5000 remain. 
Dimension is 4.

One Rule (using MIO)
Gurobi Optimizer version 11.0.3 build v11.0.3rc0 (win64 - Windows 11.0 (22631.2))

CPU model: Intel(R) Core(TM) i9-14900HX, instruction set [SSE2|AVX|AVX2]
Thread count: 24 physical cores, 32 logical processors, using up to 32 threads

Optimize a model with 22500 rows, 5008 columns and 42500 nonzeros
Model fingerprint: 0x1cd34946
Variable types: 5000 continuous, 8 integer (8 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [4e-04, 4e-04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Found heuristic solution: objective 1.0000000
Presolve removed 22420 rows and 4968 columns
Presolve time: 0.01s
Presolved: 80 rows, 40 columns, 208 nonzeros
Variable types: 0 continuous, 40 integer (40 binary)

Root relaxation: objective 2.500000e-01, 35 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.25000    0   24    1.00000    0.25000  75.0%     -    0s
H    0     0                       0.9976000    0.25000  74.9%     -    0s
H    0     0                       0.9576000    0.93640  2.21%     -    0s
H    0     0                       0.9364000    0.93640  0.00%     -    0s
     0     0          -    0         0.93640    0.93640  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Clique: 16
  Zero half: 7
  RLT: 8

Explored 1 nodes (72 simplex iterations) in 0.03 seconds (0.03 work units)
Thread count was 32 (of 32 available processors)

Solution count 4: 0.9364 0.9576 0.9976 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 9.364000000000e-01, best bound 9.364000000000e-01, gap 0.0000%
IF 
  x0 = 0 AND x2 = 0 AND x3 = 0 
THEN
 target = 1.0 ELSE target = 0.0
Accruacy: 0.5318
Our objective: 0.06359999999999996

Errors:

